<?xml version="1.0" encoding="ISO-8859-1"?>
<ANTLRGrammar:GrammarGroup xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ANTLRGrammar="http://gts.inf.um.es/gra2mol-examples/Grammar">
  <grammarDefs name="Java">
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="compilationUnit"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="packageDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="importDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="typeDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="classOrInterfaceDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="classDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="normalClassDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="typeParameters"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="typeParameter"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="bound"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="enumDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="enumBody"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="enumConstants"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="enumConstant"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="enumBodyDeclarations"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="interfaceDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="normalInterfaceDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="typeList"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="classBody"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="interfaceBody"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="classBodyDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="memberDecl"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="genericMethodOrConstructorDecl"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="genericMethodOrConstructorRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="methodDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="fieldDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="interfaceBodyDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="interfaceMemberDecl"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="interfaceMethodOrFieldDecl"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="interfaceMethodOrFieldRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="methodDeclaratorRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="voidMethodDeclaratorRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="interfaceMethodDeclaratorRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="interfaceGenericMethodDecl"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="voidInterfaceMethodDeclaratorRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="constructorDeclaratorRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="constantDeclarator"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="variableDeclarators"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="variableDeclarator"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="variableDeclaratorRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="constantDeclaratorsRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="constantDeclaratorRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="variableDeclaratorId"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="variableInitializer"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="arrayInitializer"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="modifier"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="packageOrTypeName"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="enumConstantName"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="typeName"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="type"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="primitiveType"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="variableModifier"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="typeArguments"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="typeArgument"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="qualifiedNameList"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="formalParameters"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="formalParameterDecls"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="formalParameterDeclsRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="methodBody"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="qualifiedName"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="literal"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="integerLiteral"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="booleanLiteral"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="annotations"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="annotation"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="annotationName"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="elementValuePairs"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="elementValuePair"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="elementValue"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="elementValueArrayInitializer"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="annotationTypeDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="annotationTypeBody"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="annotationTypeElementDeclarations"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="annotationTypeElementDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="annotationTypeElementRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="annotationMethodOrConstantRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="annotationMethodRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="annotationConstantRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="defaultValue"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="block"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="blockStatement"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="localVariableDeclaration"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="statement"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="catches"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="catchClause"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="formalParameter"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="switchBlockStatementGroups"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="switchBlockStatementGroup"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="switchLabel"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="moreStatementExpressions"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="forControl"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="forInit"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="forVarControl"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="forUpdate"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="parExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="expressionList"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="statementExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="constantExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="expression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="assignmentOperator"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="conditionalExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="conditionalOrExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="conditionalAndExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="inclusiveOrExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="exclusiveOrExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="andExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="equalityExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="instanceOfExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="relationalExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="relationalOp"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="shiftExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="shiftOp"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="additiveExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="multiplicativeExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="unaryExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="unaryExpressionNotPlusMinus"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="castExpression"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="primary"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="identifierSuffix"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="creator"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="createdName"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="innerCreator"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="arrayCreatorRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="classCreatorRest"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="explicitGenericInvocation"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="nonWildcardTypeArguments"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="explicitGenericInvocationSuffix"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="selector"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="superSuffix"/>
    <rules xsi:type="ANTLRGrammar:SintacticRule" name="arguments"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="HexLiteral"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="DecimalLiteral"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="OctalLiteral"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="HexDigit"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="IntegerTypeSuffix"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="FloatingPointLiteral"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="Exponent"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="FloatTypeSuffix"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="CharacterLiteral"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="StringLiteral"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="EscapeSequence"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="OctalEscape"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="UnicodeEscape"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="ENUM"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="Identifier"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="Letter"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="JavaIDDigit"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="WS"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="COMMENT"/>
    <rules xsi:type="ANTLRGrammar:LexicalRule" name="LINE_COMMENT"/>
  </grammarDefs>
</ANTLRGrammar:GrammarGroup>
