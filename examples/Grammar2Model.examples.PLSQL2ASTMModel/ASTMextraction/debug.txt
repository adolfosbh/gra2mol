Gra2MoL Interpreter version 0.3

Executing...
Models created.
Initializing indexRules...
Initializing mixinRules...
Initializing packages...
Initializing hashes...

Executing rules...
RULE: mapProject
RULE: mapProject... executing!
  Model Element astm::gastm::Project created
  Executing queries...
    Query cu with 1 result nodes - CONTENT : [Module OTG_PEUROPEOS WHEN-NEW-FORM-INSTANCE Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ; Module OTG_PEUROPEOS PRE-FORM : global . item := NULL ; : global . query := 'FALSE' ; Module OTG_PEUROPEOS POST-TEXT-ITEM set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'DEFAULT' ) ; set_item_property ( : system . cursor_item , VISUAL_ATTRIBUTE , 'DEFAULT' ) ; Module OTG_PEUROPEOS KEY-LISTVAL declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ; Module OTG_PEUROPEOS WHEN-NEW-ITEM-INSTANCE LISTA_VALORES ; Module OTG_PEUROPEOS WHEN-MOUSE-DOUBLECLICK GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' THEN GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ; END IF ; END IF ; Module OTG_PEUROPEOS KEY-HELP NULL ; Module OTG_PEUROPEOS KEY-MENU NULL ; Module OTG_PEUROPEOS ON-ERROR Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ; Module OTG_PEUROPEOS KEY-ENTQRY activa_consulta ; Module OTG_PEUROPEOS KEY-EXEQRY lista_valores ; ejecuta_consulta ; Module OTG_PEUROPEOS KEY-EXIT : system . mode = 'ENTER-QUERY' then cancela_consulta ; else exit_form ; end if ; Module OTG_PEUROPEOS ON-CLEAR-DETAILS BEGIN Clear_All_Master_Details ; END ; Module OTG_PEUROPEOS WHEN-TAB-PAGE-CHANGED DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ; Block OTG_PEUROPEOS PRE-QUERY declare existe number ; begin : GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ; end ; Block OTG_PEUROPEOS PRE-INSERT select s_peu_codigo . nextval into : peu_codigo from dual ; Block OTG_PEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_PEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_JPEUROPEOS_cur IS SELECT 1 FROM OTG_JPEUROPEOS WHERE JPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_SPEUROPEOS_cur IS SELECT 1 FROM OTG_SPEUROPEOS WHERE SPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_OPEUROPEOS_cur IS SELECT 1 FROM OTG_OPEUROPEOS WHERE OPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_PERPEUROPEOS_cur IS SELECT 1 FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_UPEUROPEOS_cur IS SELECT 1 FROM OTG_UPEUROPEOS WHERE UPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_DISEUROPEOS_cur IS SELECT 1 FROM OTG_DISEUROPEOS O WHERE O . DPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; BEGIN OPEN OTG_JPEUROPEOS_cur ; FETCH OTG_JPEUROPEOS_cur INTO Dummy_Define ; ( OTG_JPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_JPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_JPEUROPEOS_cur ; OPEN OTG_SPEUROPEOS_cur ; FETCH OTG_SPEUROPEOS_cur INTO Dummy_Define ; ( OTG_SPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_SPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_SPEUROPEOS_cur ; OPEN OTG_OPEUROPEOS_cur ; FETCH OTG_OPEUROPEOS_cur INTO Dummy_Define ; ( OTG_OPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_OPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_OPEUROPEOS_cur ; OPEN OTG_PERPEUROPEOS_cur ; FETCH OTG_PERPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PERPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PERPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PERPEUROPEOS_cur ; OPEN OTG_UPEUROPEOS_cur ; FETCH OTG_UPEUROPEOS_cur INTO Dummy_Define ; ( OTG_UPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_UPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_UPEUROPEOS_cur ; OPEN OTG_DISEUROPEOS_cur ; FETCH OTG_DISEUROPEOS_cur INTO Dummy_Define ; ( OTG_DISEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_DISEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_DISEUROPEOS_cur ; END ; Block OTG_PEUROPEOS WHEN-NEW-RECORD-INSTANCE : PEU_CG IS NULL THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; ELSE DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ; END IF ; BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; : peu_seu_codigo is not null then select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ; end if ; Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PEU_CG POST-CHANGE : WPEU_CG := F_CG_CODIGO ( : PEU_CG ) ; Item WPEU_CG KEY-PREV-ITEM NULL ; Item WPEU_CG WHEN-VALIDATE-ITEM : PEU_CG := F_CODIGO_CG ( : WPEU_CG ) ; Item WPEU_CG KEY-LISTVAL SET_ITEM_PROPERTY ( 'OTG_PEUROPEOS.PEU_CG' , ITEM_IS_VALID , PROPERTY_TRUE ) ; Item GENERAR_CG WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR OR Item VER_CG WHEN-BUTTON-PRESSED DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ; Item PEU_SEU_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SEUROPEOS where SEU_CODIGO = : OTG_PEUROPEOS . PEU_SEU_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item WGO_PEU_SEU_CODIGO WHEN-BUTTON-PRESSED Declare NomVar Varchar2 ( 100 ) ; ValVar number ; r number ; Begin NomVar := replace replace replace Item PEU_APR_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_APRODUCTIVAS where APR_CODIGO = : OTG_PEUROPEOS . PEU_APR_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SUPERPROYECTOS where SUP_CODIGO = : OTG_PEUROPEOS . PEU_SUP_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_SUP_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ; Item WGO_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED declare codigo number ; Wsup_codigo Varchar2 ( 100 ) ; r number ; begin Wsup_codigo := replace replace replace Item PEU_ACC_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_ACC_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_ACC_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ; Item PEU_SCO_CODIGO WHEN-LIST-CHANGED BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; Item ACEPTAR WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ; Item CANCELAR WHEN-BUTTON-PRESSED GO_ITEM ( 'WPEU_CG' ) ; Item UPE_UOR_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item UPE_UOR_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item UPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WUPE_UOR_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item PPE_PER_ID POST-CHANGE Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ; Item PPE_PER_ID WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WDNI_PPE_PER_ID WHEN-NEW-ITEM-INSTANCE set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'campo_azul' ) ; Item WDNI_PPE_PER_ID WHEN-MOUSE-DOUBLECLICK execute_trigger ( 'KEY-LISTVAL' ) ; Item WDNI_PPE_PER_ID KEY-LISTVAL Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ; Item WADD_PPE_PER_ID WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ; Item WGO_PPE_PER_ID WHEN-BUTTON-PRESSED declare tipo Varchar2 ( 1 ) ; id Number ; WPer_id Varchar2 ( 100 ) ; r Number ; begin Wper_id := replace replace replace Item DPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item DPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ; Item WDPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_JPEUROPEOS KEY-DELREC declare cursor primary_cur is select 'x' from OTG_PPEUROPEOS where PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; primary_dummy char ( 1 ) ; begin ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; delete_record ; Block OTG_JPEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_JPEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_PPEUROPEOS_cur IS SELECT 1 FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; BEGIN OPEN OTG_PPEUROPEOS_cur ; FETCH OTG_PPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PPEUROPEOS_cur ; END ; Item JPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_PPEUROPEOS POST-CHANGE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-UPDATE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-INSERT Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-DELETE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_JUSTIFICA WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_SPEUROPEOS PRE-INSERT select s_spe_codigo . nextval into : spe_codigo from dual ; Item SPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item SPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_OPEUROPEOS PRE-INSERT select s_oeu_codigo . nextval into : ope_codigo from dual ; Item OPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item OPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PB_ENTQ WHEN-BUTTON-PRESSED do_key ( 'Enter_query' ) ; Item PB_EXEQ WHEN-BUTTON-PRESSED do_key ( 'Execute_query' ) ; Item PB_CANQ WHEN-BUTTON-PRESSED : system . mode = 'ENTER-QUERY' then do_key ( 'Exit_form' ) ; end if ; Item PB_SAVE WHEN-BUTTON-PRESSED do_key ( 'commit_form' ) ; Item PB_ANT WHEN-BUTTON-PRESSED previous_record ; Item PB_SIG WHEN-BUTTON-PRESSED next_record ; Item PB_INS WHEN-BUTTON-PRESSED do_key ( 'create_record' ) ; Item PB_DEL WHEN-BUTTON-PRESSED Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ; Item PB_EXIT WHEN-BUTTON-PRESSED Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ; Block CALENDARIO WHEN-MOUSE-DOUBLECLICK NULL ; Block CALENDARIO WHEN-MOUSE-CLICK date_lov . date_click ; Block CALENDARIO KEY-OTHERS NULL ; Item OK_BUTTON WHEN-MOUSE-CLICK null ; Item OK_BUTTON WHEN-BUTTON-PRESSED copy ( to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) , date_lov . date_lov_return_item ) ; go_item ( date_lov . date_lov_return_item ) ; date_lov . lov_auto_skip = TRUE then next_item ; end if ; Item CANCEL_BUTTON WHEN-MOUSE-CLICK null ; Item CANCEL_BUTTON WHEN-BUTTON-PRESSED go_item ( date_lov . date_lov_return_item ) ; Item MONTH_PLUS1 WHEN-MOUSE-CLICK null ; Item MONTH_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_PLUS1 WHEN-MOUSE-CLICK null ; Item YEAR_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_MINUS1 WHEN-MOUSE-CLICK null ; Item YEAR_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item MONTH_MINUS1 WHEN-MOUSE-CLICK null ; Item MONTH_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item DISPLAY_MON_YEAR WHEN-MOUSE-CLICK null ; Item DAY_LABEL1 WHEN-MOUSE-CLICK null ; Item DAY_LABEL2 WHEN-MOUSE-CLICK null ; Item DAY_LABEL3 WHEN-MOUSE-CLICK null ; Item DAY_LABEL4 WHEN-MOUSE-CLICK null ; Item DAY_LABEL5 WHEN-MOUSE-CLICK null ; Item DAY_LABEL6 WHEN-MOUSE-CLICK null ; Item DAY_LABEL7 WHEN-MOUSE-CLICK null ; ]
    Query sf with 1 result nodes - CONTENT : [Module OTG_PEUROPEOS WHEN-NEW-FORM-INSTANCE Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ; Module OTG_PEUROPEOS PRE-FORM : global . item := NULL ; : global . query := 'FALSE' ; Module OTG_PEUROPEOS POST-TEXT-ITEM set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'DEFAULT' ) ; set_item_property ( : system . cursor_item , VISUAL_ATTRIBUTE , 'DEFAULT' ) ; Module OTG_PEUROPEOS KEY-LISTVAL declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ; Module OTG_PEUROPEOS WHEN-NEW-ITEM-INSTANCE LISTA_VALORES ; Module OTG_PEUROPEOS WHEN-MOUSE-DOUBLECLICK GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' THEN GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ; END IF ; END IF ; Module OTG_PEUROPEOS KEY-HELP NULL ; Module OTG_PEUROPEOS KEY-MENU NULL ; Module OTG_PEUROPEOS ON-ERROR Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ; Module OTG_PEUROPEOS KEY-ENTQRY activa_consulta ; Module OTG_PEUROPEOS KEY-EXEQRY lista_valores ; ejecuta_consulta ; Module OTG_PEUROPEOS KEY-EXIT : system . mode = 'ENTER-QUERY' then cancela_consulta ; else exit_form ; end if ; Module OTG_PEUROPEOS ON-CLEAR-DETAILS BEGIN Clear_All_Master_Details ; END ; Module OTG_PEUROPEOS WHEN-TAB-PAGE-CHANGED DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ; Block OTG_PEUROPEOS PRE-QUERY declare existe number ; begin : GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ; end ; Block OTG_PEUROPEOS PRE-INSERT select s_peu_codigo . nextval into : peu_codigo from dual ; Block OTG_PEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_PEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_JPEUROPEOS_cur IS SELECT 1 FROM OTG_JPEUROPEOS WHERE JPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_SPEUROPEOS_cur IS SELECT 1 FROM OTG_SPEUROPEOS WHERE SPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_OPEUROPEOS_cur IS SELECT 1 FROM OTG_OPEUROPEOS WHERE OPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_PERPEUROPEOS_cur IS SELECT 1 FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_UPEUROPEOS_cur IS SELECT 1 FROM OTG_UPEUROPEOS WHERE UPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_DISEUROPEOS_cur IS SELECT 1 FROM OTG_DISEUROPEOS O WHERE O . DPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; BEGIN OPEN OTG_JPEUROPEOS_cur ; FETCH OTG_JPEUROPEOS_cur INTO Dummy_Define ; ( OTG_JPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_JPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_JPEUROPEOS_cur ; OPEN OTG_SPEUROPEOS_cur ; FETCH OTG_SPEUROPEOS_cur INTO Dummy_Define ; ( OTG_SPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_SPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_SPEUROPEOS_cur ; OPEN OTG_OPEUROPEOS_cur ; FETCH OTG_OPEUROPEOS_cur INTO Dummy_Define ; ( OTG_OPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_OPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_OPEUROPEOS_cur ; OPEN OTG_PERPEUROPEOS_cur ; FETCH OTG_PERPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PERPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PERPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PERPEUROPEOS_cur ; OPEN OTG_UPEUROPEOS_cur ; FETCH OTG_UPEUROPEOS_cur INTO Dummy_Define ; ( OTG_UPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_UPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_UPEUROPEOS_cur ; OPEN OTG_DISEUROPEOS_cur ; FETCH OTG_DISEUROPEOS_cur INTO Dummy_Define ; ( OTG_DISEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_DISEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_DISEUROPEOS_cur ; END ; Block OTG_PEUROPEOS WHEN-NEW-RECORD-INSTANCE : PEU_CG IS NULL THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; ELSE DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ; END IF ; BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; : peu_seu_codigo is not null then select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ; end if ; Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PEU_CG POST-CHANGE : WPEU_CG := F_CG_CODIGO ( : PEU_CG ) ; Item WPEU_CG KEY-PREV-ITEM NULL ; Item WPEU_CG WHEN-VALIDATE-ITEM : PEU_CG := F_CODIGO_CG ( : WPEU_CG ) ; Item WPEU_CG KEY-LISTVAL SET_ITEM_PROPERTY ( 'OTG_PEUROPEOS.PEU_CG' , ITEM_IS_VALID , PROPERTY_TRUE ) ; Item GENERAR_CG WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR OR Item VER_CG WHEN-BUTTON-PRESSED DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ; Item PEU_SEU_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SEUROPEOS where SEU_CODIGO = : OTG_PEUROPEOS . PEU_SEU_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item WGO_PEU_SEU_CODIGO WHEN-BUTTON-PRESSED Declare NomVar Varchar2 ( 100 ) ; ValVar number ; r number ; Begin NomVar := replace replace replace Item PEU_APR_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_APRODUCTIVAS where APR_CODIGO = : OTG_PEUROPEOS . PEU_APR_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SUPERPROYECTOS where SUP_CODIGO = : OTG_PEUROPEOS . PEU_SUP_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_SUP_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ; Item WGO_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED declare codigo number ; Wsup_codigo Varchar2 ( 100 ) ; r number ; begin Wsup_codigo := replace replace replace Item PEU_ACC_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_ACC_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_ACC_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ; Item PEU_SCO_CODIGO WHEN-LIST-CHANGED BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; Item ACEPTAR WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ; Item CANCELAR WHEN-BUTTON-PRESSED GO_ITEM ( 'WPEU_CG' ) ; Item UPE_UOR_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item UPE_UOR_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item UPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WUPE_UOR_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item PPE_PER_ID POST-CHANGE Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ; Item PPE_PER_ID WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WDNI_PPE_PER_ID WHEN-NEW-ITEM-INSTANCE set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'campo_azul' ) ; Item WDNI_PPE_PER_ID WHEN-MOUSE-DOUBLECLICK execute_trigger ( 'KEY-LISTVAL' ) ; Item WDNI_PPE_PER_ID KEY-LISTVAL Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ; Item WADD_PPE_PER_ID WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ; Item WGO_PPE_PER_ID WHEN-BUTTON-PRESSED declare tipo Varchar2 ( 1 ) ; id Number ; WPer_id Varchar2 ( 100 ) ; r Number ; begin Wper_id := replace replace replace Item DPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item DPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ; Item WDPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_JPEUROPEOS KEY-DELREC declare cursor primary_cur is select 'x' from OTG_PPEUROPEOS where PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; primary_dummy char ( 1 ) ; begin ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; delete_record ; Block OTG_JPEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_JPEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_PPEUROPEOS_cur IS SELECT 1 FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; BEGIN OPEN OTG_PPEUROPEOS_cur ; FETCH OTG_PPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PPEUROPEOS_cur ; END ; Item JPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_PPEUROPEOS POST-CHANGE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-UPDATE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-INSERT Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-DELETE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_JUSTIFICA WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_SPEUROPEOS PRE-INSERT select s_spe_codigo . nextval into : spe_codigo from dual ; Item SPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item SPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_OPEUROPEOS PRE-INSERT select s_oeu_codigo . nextval into : ope_codigo from dual ; Item OPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item OPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PB_ENTQ WHEN-BUTTON-PRESSED do_key ( 'Enter_query' ) ; Item PB_EXEQ WHEN-BUTTON-PRESSED do_key ( 'Execute_query' ) ; Item PB_CANQ WHEN-BUTTON-PRESSED : system . mode = 'ENTER-QUERY' then do_key ( 'Exit_form' ) ; end if ; Item PB_SAVE WHEN-BUTTON-PRESSED do_key ( 'commit_form' ) ; Item PB_ANT WHEN-BUTTON-PRESSED previous_record ; Item PB_SIG WHEN-BUTTON-PRESSED next_record ; Item PB_INS WHEN-BUTTON-PRESSED do_key ( 'create_record' ) ; Item PB_DEL WHEN-BUTTON-PRESSED Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ; Item PB_EXIT WHEN-BUTTON-PRESSED Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ; Block CALENDARIO WHEN-MOUSE-DOUBLECLICK NULL ; Block CALENDARIO WHEN-MOUSE-CLICK date_lov . date_click ; Block CALENDARIO KEY-OTHERS NULL ; Item OK_BUTTON WHEN-MOUSE-CLICK null ; Item OK_BUTTON WHEN-BUTTON-PRESSED copy ( to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) , date_lov . date_lov_return_item ) ; go_item ( date_lov . date_lov_return_item ) ; date_lov . lov_auto_skip = TRUE then next_item ; end if ; Item CANCEL_BUTTON WHEN-MOUSE-CLICK null ; Item CANCEL_BUTTON WHEN-BUTTON-PRESSED go_item ( date_lov . date_lov_return_item ) ; Item MONTH_PLUS1 WHEN-MOUSE-CLICK null ; Item MONTH_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_PLUS1 WHEN-MOUSE-CLICK null ; Item YEAR_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_MINUS1 WHEN-MOUSE-CLICK null ; Item YEAR_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item MONTH_MINUS1 WHEN-MOUSE-CLICK null ; Item MONTH_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item DISPLAY_MON_YEAR WHEN-MOUSE-CLICK null ; Item DAY_LABEL1 WHEN-MOUSE-CLICK null ; Item DAY_LABEL2 WHEN-MOUSE-CLICK null ; Item DAY_LABEL3 WHEN-MOUSE-CLICK null ; Item DAY_LABEL4 WHEN-MOUSE-CLICK null ; Item DAY_LABEL5 WHEN-MOUSE-CLICK null ; Item DAY_LABEL6 WHEN-MOUSE-CLICK null ; Item DAY_LABEL7 WHEN-MOUSE-CLICK null ; ]
  Executing mappings...
    - QUERY_RESULT: 1 bindings:
      (1/1) result node: CST (kind). Rule... calling mapCompilationUnit rule

      RULE: mapCompilationUnit
      RULE: mapCompilationUnit... executing!
        Model Element astm::gastm::CompilationUnit created
        Executing queries...
          Query cst with 1 result nodes - CONTENT : [Module OTG_PEUROPEOS WHEN-NEW-FORM-INSTANCE Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ; Module OTG_PEUROPEOS PRE-FORM : global . item := NULL ; : global . query := 'FALSE' ; Module OTG_PEUROPEOS POST-TEXT-ITEM set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'DEFAULT' ) ; set_item_property ( : system . cursor_item , VISUAL_ATTRIBUTE , 'DEFAULT' ) ; Module OTG_PEUROPEOS KEY-LISTVAL declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ; Module OTG_PEUROPEOS WHEN-NEW-ITEM-INSTANCE LISTA_VALORES ; Module OTG_PEUROPEOS WHEN-MOUSE-DOUBLECLICK GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' THEN GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ; END IF ; END IF ; Module OTG_PEUROPEOS KEY-HELP NULL ; Module OTG_PEUROPEOS KEY-MENU NULL ; Module OTG_PEUROPEOS ON-ERROR Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ; Module OTG_PEUROPEOS KEY-ENTQRY activa_consulta ; Module OTG_PEUROPEOS KEY-EXEQRY lista_valores ; ejecuta_consulta ; Module OTG_PEUROPEOS KEY-EXIT : system . mode = 'ENTER-QUERY' then cancela_consulta ; else exit_form ; end if ; Module OTG_PEUROPEOS ON-CLEAR-DETAILS BEGIN Clear_All_Master_Details ; END ; Module OTG_PEUROPEOS WHEN-TAB-PAGE-CHANGED DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ; Block OTG_PEUROPEOS PRE-QUERY declare existe number ; begin : GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ; end ; Block OTG_PEUROPEOS PRE-INSERT select s_peu_codigo . nextval into : peu_codigo from dual ; Block OTG_PEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_PEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_JPEUROPEOS_cur IS SELECT 1 FROM OTG_JPEUROPEOS WHERE JPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_SPEUROPEOS_cur IS SELECT 1 FROM OTG_SPEUROPEOS WHERE SPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_OPEUROPEOS_cur IS SELECT 1 FROM OTG_OPEUROPEOS WHERE OPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_PERPEUROPEOS_cur IS SELECT 1 FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_UPEUROPEOS_cur IS SELECT 1 FROM OTG_UPEUROPEOS WHERE UPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_DISEUROPEOS_cur IS SELECT 1 FROM OTG_DISEUROPEOS O WHERE O . DPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; BEGIN OPEN OTG_JPEUROPEOS_cur ; FETCH OTG_JPEUROPEOS_cur INTO Dummy_Define ; ( OTG_JPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_JPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_JPEUROPEOS_cur ; OPEN OTG_SPEUROPEOS_cur ; FETCH OTG_SPEUROPEOS_cur INTO Dummy_Define ; ( OTG_SPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_SPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_SPEUROPEOS_cur ; OPEN OTG_OPEUROPEOS_cur ; FETCH OTG_OPEUROPEOS_cur INTO Dummy_Define ; ( OTG_OPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_OPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_OPEUROPEOS_cur ; OPEN OTG_PERPEUROPEOS_cur ; FETCH OTG_PERPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PERPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PERPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PERPEUROPEOS_cur ; OPEN OTG_UPEUROPEOS_cur ; FETCH OTG_UPEUROPEOS_cur INTO Dummy_Define ; ( OTG_UPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_UPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_UPEUROPEOS_cur ; OPEN OTG_DISEUROPEOS_cur ; FETCH OTG_DISEUROPEOS_cur INTO Dummy_Define ; ( OTG_DISEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_DISEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_DISEUROPEOS_cur ; END ; Block OTG_PEUROPEOS WHEN-NEW-RECORD-INSTANCE : PEU_CG IS NULL THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; ELSE DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ; END IF ; BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; : peu_seu_codigo is not null then select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ; end if ; Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PEU_CG POST-CHANGE : WPEU_CG := F_CG_CODIGO ( : PEU_CG ) ; Item WPEU_CG KEY-PREV-ITEM NULL ; Item WPEU_CG WHEN-VALIDATE-ITEM : PEU_CG := F_CODIGO_CG ( : WPEU_CG ) ; Item WPEU_CG KEY-LISTVAL SET_ITEM_PROPERTY ( 'OTG_PEUROPEOS.PEU_CG' , ITEM_IS_VALID , PROPERTY_TRUE ) ; Item GENERAR_CG WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR OR Item VER_CG WHEN-BUTTON-PRESSED DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ; Item PEU_SEU_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SEUROPEOS where SEU_CODIGO = : OTG_PEUROPEOS . PEU_SEU_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item WGO_PEU_SEU_CODIGO WHEN-BUTTON-PRESSED Declare NomVar Varchar2 ( 100 ) ; ValVar number ; r number ; Begin NomVar := replace replace replace Item PEU_APR_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_APRODUCTIVAS where APR_CODIGO = : OTG_PEUROPEOS . PEU_APR_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SUPERPROYECTOS where SUP_CODIGO = : OTG_PEUROPEOS . PEU_SUP_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_SUP_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ; Item WGO_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED declare codigo number ; Wsup_codigo Varchar2 ( 100 ) ; r number ; begin Wsup_codigo := replace replace replace Item PEU_ACC_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_ACC_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_ACC_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ; Item PEU_SCO_CODIGO WHEN-LIST-CHANGED BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; Item ACEPTAR WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ; Item CANCELAR WHEN-BUTTON-PRESSED GO_ITEM ( 'WPEU_CG' ) ; Item UPE_UOR_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item UPE_UOR_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item UPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WUPE_UOR_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item PPE_PER_ID POST-CHANGE Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ; Item PPE_PER_ID WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WDNI_PPE_PER_ID WHEN-NEW-ITEM-INSTANCE set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'campo_azul' ) ; Item WDNI_PPE_PER_ID WHEN-MOUSE-DOUBLECLICK execute_trigger ( 'KEY-LISTVAL' ) ; Item WDNI_PPE_PER_ID KEY-LISTVAL Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ; Item WADD_PPE_PER_ID WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ; Item WGO_PPE_PER_ID WHEN-BUTTON-PRESSED declare tipo Varchar2 ( 1 ) ; id Number ; WPer_id Varchar2 ( 100 ) ; r Number ; begin Wper_id := replace replace replace Item DPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item DPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ; Item WDPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_JPEUROPEOS KEY-DELREC declare cursor primary_cur is select 'x' from OTG_PPEUROPEOS where PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; primary_dummy char ( 1 ) ; begin ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; delete_record ; Block OTG_JPEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_JPEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_PPEUROPEOS_cur IS SELECT 1 FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; BEGIN OPEN OTG_PPEUROPEOS_cur ; FETCH OTG_PPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PPEUROPEOS_cur ; END ; Item JPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_PPEUROPEOS POST-CHANGE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-UPDATE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-INSERT Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-DELETE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_JUSTIFICA WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_SPEUROPEOS PRE-INSERT select s_spe_codigo . nextval into : spe_codigo from dual ; Item SPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item SPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_OPEUROPEOS PRE-INSERT select s_oeu_codigo . nextval into : ope_codigo from dual ; Item OPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item OPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PB_ENTQ WHEN-BUTTON-PRESSED do_key ( 'Enter_query' ) ; Item PB_EXEQ WHEN-BUTTON-PRESSED do_key ( 'Execute_query' ) ; Item PB_CANQ WHEN-BUTTON-PRESSED : system . mode = 'ENTER-QUERY' then do_key ( 'Exit_form' ) ; end if ; Item PB_SAVE WHEN-BUTTON-PRESSED do_key ( 'commit_form' ) ; Item PB_ANT WHEN-BUTTON-PRESSED previous_record ; Item PB_SIG WHEN-BUTTON-PRESSED next_record ; Item PB_INS WHEN-BUTTON-PRESSED do_key ( 'create_record' ) ; Item PB_DEL WHEN-BUTTON-PRESSED Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ; Item PB_EXIT WHEN-BUTTON-PRESSED Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ; Block CALENDARIO WHEN-MOUSE-DOUBLECLICK NULL ; Block CALENDARIO WHEN-MOUSE-CLICK date_lov . date_click ; Block CALENDARIO KEY-OTHERS NULL ; Item OK_BUTTON WHEN-MOUSE-CLICK null ; Item OK_BUTTON WHEN-BUTTON-PRESSED copy ( to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) , date_lov . date_lov_return_item ) ; go_item ( date_lov . date_lov_return_item ) ; date_lov . lov_auto_skip = TRUE then next_item ; end if ; Item CANCEL_BUTTON WHEN-MOUSE-CLICK null ; Item CANCEL_BUTTON WHEN-BUTTON-PRESSED go_item ( date_lov . date_lov_return_item ) ; Item MONTH_PLUS1 WHEN-MOUSE-CLICK null ; Item MONTH_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_PLUS1 WHEN-MOUSE-CLICK null ; Item YEAR_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_MINUS1 WHEN-MOUSE-CLICK null ; Item YEAR_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item MONTH_MINUS1 WHEN-MOUSE-CLICK null ; Item MONTH_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item DISPLAY_MON_YEAR WHEN-MOUSE-CLICK null ; Item DAY_LABEL1 WHEN-MOUSE-CLICK null ; Item DAY_LABEL2 WHEN-MOUSE-CLICK null ; Item DAY_LABEL3 WHEN-MOUSE-CLICK null ; Item DAY_LABEL4 WHEN-MOUSE-CLICK null ; Item DAY_LABEL5 WHEN-MOUSE-CLICK null ; Item DAY_LABEL6 WHEN-MOUSE-CLICK null ; Item DAY_LABEL7 WHEN-MOUSE-CLICK null ; ]
          Query ts with 106 result nodes
        Executing mappings...
          - VALUE: language (property) - PL/SQL (value)
          - QUERY_RESULT: 106 bindings:
            (1/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit
            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS WHEN-NEW-FORM-INSTANCE Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-NEW-FORM-INSTANCE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement
                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query st with 1 result nodes - CONTENT : [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                      Query stats with 6 result nodes
                      Query decls with 6 result nodes
                      Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                      Query excep with 0 result nodes
                    Executing mappings...
                      - QUERY_RESULT: 6 bindings:
                        (1/6) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall
                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query st with 1 result nodes - CONTENT : [default_value ( null , 'global.seu_codigo' ) ]
                            Query f with 1 result nodes - CONTENT in line 21: [default_value ( null , 'global.seu_codigo' ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query iden with 1 result nodes - CONTENT in line 21: [default_value ]
                                  Query params with 2 result nodes
                                  Query exp with 2 result nodes
                                  Query fc with 1 result nodes - CONTENT in line 21: [default_value ( null , 'global.seu_codigo' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - default_value (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter
                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query iden with 0 result nodes
                                        Query expB with 0 result nodes
                                        Query expA with 1 result nodes - CONTENT : [null ]
                                        Query cp with 1 result nodes - CONTENT : [null ]
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules
                                            RULE: skipAllBooleanRules... executing!
                                            SKIP_RULE: skipAllBooleanRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : [null ]
                                              Query exp with 1 result nodes - CONTENT : [null ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd
                                            RULE: skipToExprAdd... executing!
                                            SKIP_RULE: skipToExprAdd... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : [null ]
                                              Query exp with 1 result nodes - CONTENT : [null ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules
                                            RULE: skipAllArithmeticRules... executing!
                                            SKIP_RULE: skipAllArithmeticRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : [null ]
                                              Query exp with 1 result nodes - CONTENT : [null ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: mapNullLiteral
                                            RULE: mapNullLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT in line 21: [null ]
                                                Query exp with 1 result nodes - CONTENT : [null ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: null


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter
                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query iden with 0 result nodes
                                        Query expB with 0 result nodes
                                        Query expA with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                        Query cp with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules
                                            RULE: skipAllBooleanRules... executing!
                                            SKIP_RULE: skipAllBooleanRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                              Query exp with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd
                                            RULE: skipToExprAdd... executing!
                                            SKIP_RULE: skipToExprAdd... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                              Query exp with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules
                                            RULE: skipAllArithmeticRules... executing!
                                            SKIP_RULE: skipAllArithmeticRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                              Query exp with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT in line 21: ['global.seu_codigo' ]
                                                Query exp with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'global.seu_codigo'




                        (2/6) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment
                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query st with 1 result nodes - CONTENT : [a := populate_group ( 'APRODUCTIVAS' ) ]
                            Query as with 1 result nodes - CONTENT in line 23: [a := populate_group ( 'APRODUCTIVAS' ) ]
                            Query exp with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                            Query value with 1 result nodes - CONTENT : [a ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: a
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules
                              RULE: skipAllBooleanRules... executing!
                              SKIP_RULE: skipAllBooleanRules... executing!
                              Executing skip query...
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                              Locating skip query... 
                              Skip statement located! 
                              Skipping to rule...
                              RULE: skipToExprAdd
                              RULE: skipToExprAdd... executing!
                              SKIP_RULE: skipToExprAdd... executing!
                              Executing skip query...
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                              Locating skip query... 
                              Skip statement located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules
                              RULE: skipAllArithmeticRules... executing!
                              SKIP_RULE: skipAllArithmeticRules... executing!
                              Executing skip query...
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                              Locating skip query... 
                              Skip statement located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              SKIP_RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Executing skip query...
                                Query cast1 with 1 result nodes - CONTENT : [populate_group ]
                                Query s with 1 result nodes - CONTENT in line 23: [populate_group ( 'APRODUCTIVAS' ) ]
                                Query dec with 0 result nodes
                                Query cast2 with 1 result nodes - CONTENT : [populate_group ]
                                Query iden with 1 result nodes - CONTENT in line 23: [populate_group ]
                                Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... 
                              Skip statement located! 
                              Skipping to rule...
                              RULE: mapFunctionCall
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query iden with 1 result nodes - CONTENT in line 23: [populate_group ]
                                  Query params with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                  Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                  Query fc with 1 result nodes - CONTENT in line 23: [populate_group ( 'APRODUCTIVAS' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - populate_group (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter
                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query iden with 0 result nodes
                                        Query expB with 0 result nodes
                                        Query expA with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                        Query cp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules
                                            RULE: skipAllBooleanRules... executing!
                                            SKIP_RULE: skipAllBooleanRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd
                                            RULE: skipToExprAdd... executing!
                                            SKIP_RULE: skipToExprAdd... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules
                                            RULE: skipAllArithmeticRules... executing!
                                            SKIP_RULE: skipAllArithmeticRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT in line 23: ['APRODUCTIVAS' ]
                                                Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'APRODUCTIVAS'




                        (3/6) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall
                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query st with 1 result nodes - CONTENT : [populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ]
                            Query f with 1 result nodes - CONTENT in line 24: [populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query iden with 1 result nodes - CONTENT in line 24: [populate_list ]
                                  Query params with 2 result nodes
                                  Query exp with 2 result nodes
                                  Query fc with 1 result nodes - CONTENT in line 24: [populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - populate_list (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter
                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query iden with 0 result nodes
                                        Query expB with 0 result nodes
                                        Query expA with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                        Query cp with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules
                                            RULE: skipAllBooleanRules... executing!
                                            SKIP_RULE: skipAllBooleanRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                              Query exp with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd
                                            RULE: skipToExprAdd... executing!
                                            SKIP_RULE: skipToExprAdd... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                              Query exp with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules
                                            RULE: skipAllArithmeticRules... executing!
                                            SKIP_RULE: skipAllArithmeticRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                              Query exp with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT in line 24: ['PEU_APR_CODIGO' ]
                                                Query exp with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'PEU_APR_CODIGO'


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter
                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query iden with 0 result nodes
                                        Query expB with 0 result nodes
                                        Query expA with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                        Query cp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules
                                            RULE: skipAllBooleanRules... executing!
                                            SKIP_RULE: skipAllBooleanRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd
                                            RULE: skipToExprAdd... executing!
                                            SKIP_RULE: skipToExprAdd... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules
                                            RULE: skipAllArithmeticRules... executing!
                                            SKIP_RULE: skipAllArithmeticRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT in line 24: ['APRODUCTIVAS' ]
                                                Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'APRODUCTIVAS'




                        (4/6) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment
                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query st with 1 result nodes - CONTENT : [c := populate_group ( 'SCOSTES' ) ]
                            Query as with 1 result nodes - CONTENT in line 25: [c := populate_group ( 'SCOSTES' ) ]
                            Query exp with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                            Query value with 1 result nodes - CONTENT : [c ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: c
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules
                              RULE: skipAllBooleanRules... executing!
                              SKIP_RULE: skipAllBooleanRules... executing!
                              Executing skip query...
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                              Locating skip query... 
                              Skip statement located! 
                              Skipping to rule...
                              RULE: skipToExprAdd
                              RULE: skipToExprAdd... executing!
                              SKIP_RULE: skipToExprAdd... executing!
                              Executing skip query...
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                              Locating skip query... 
                              Skip statement located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules
                              RULE: skipAllArithmeticRules... executing!
                              SKIP_RULE: skipAllArithmeticRules... executing!
                              Executing skip query...
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                              Locating skip query... 
                              Skip statement located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              SKIP_RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Executing skip query...
                                Query cast1 with 1 result nodes - CONTENT : [populate_group ]
                                Query s with 1 result nodes - CONTENT in line 25: [populate_group ( 'SCOSTES' ) ]
                                Query dec with 0 result nodes
                                Query cast2 with 1 result nodes - CONTENT : [populate_group ]
                                Query iden with 1 result nodes - CONTENT in line 25: [populate_group ]
                                Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... 
                              Skip statement located! 
                              Skipping to rule...
                              RULE: mapFunctionCall
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query iden with 1 result nodes - CONTENT in line 25: [populate_group ]
                                  Query params with 1 result nodes - CONTENT : ['SCOSTES' ]
                                  Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                  Query fc with 1 result nodes - CONTENT in line 25: [populate_group ( 'SCOSTES' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - populate_group (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter
                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query iden with 0 result nodes
                                        Query expB with 0 result nodes
                                        Query expA with 1 result nodes - CONTENT : ['SCOSTES' ]
                                        Query cp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules
                                            RULE: skipAllBooleanRules... executing!
                                            SKIP_RULE: skipAllBooleanRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd
                                            RULE: skipToExprAdd... executing!
                                            SKIP_RULE: skipToExprAdd... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules
                                            RULE: skipAllArithmeticRules... executing!
                                            SKIP_RULE: skipAllArithmeticRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT in line 25: ['SCOSTES' ]
                                                Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'SCOSTES'




                        (5/6) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall
                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query st with 1 result nodes - CONTENT : [populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ]
                            Query f with 1 result nodes - CONTENT in line 26: [populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query iden with 1 result nodes - CONTENT in line 26: [populate_list ]
                                  Query params with 2 result nodes
                                  Query exp with 2 result nodes
                                  Query fc with 1 result nodes - CONTENT in line 26: [populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - populate_list (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter
                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query iden with 0 result nodes
                                        Query expB with 0 result nodes
                                        Query expA with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                        Query cp with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules
                                            RULE: skipAllBooleanRules... executing!
                                            SKIP_RULE: skipAllBooleanRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                              Query exp with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd
                                            RULE: skipToExprAdd... executing!
                                            SKIP_RULE: skipToExprAdd... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                              Query exp with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules
                                            RULE: skipAllArithmeticRules... executing!
                                            SKIP_RULE: skipAllArithmeticRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                              Query exp with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT in line 26: ['PEU_SCO_CODIGO' ]
                                                Query exp with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'PEU_SCO_CODIGO'


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter
                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query iden with 0 result nodes
                                        Query expB with 0 result nodes
                                        Query expA with 1 result nodes - CONTENT : ['SCOSTES' ]
                                        Query cp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules
                                            RULE: skipAllBooleanRules... executing!
                                            SKIP_RULE: skipAllBooleanRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd
                                            RULE: skipToExprAdd... executing!
                                            SKIP_RULE: skipToExprAdd... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules
                                            RULE: skipAllArithmeticRules... executing!
                                            SKIP_RULE: skipAllArithmeticRules... executing!
                                            Executing skip query...
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... 
                                            Skip statement located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT in line 26: ['SCOSTES' ]
                                                Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'SCOSTES'




                        (6/6) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf
                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query st with 1 result nodes - CONTENT : [: global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ]
                            Query thenSt with 2 result nodes
                            Query elseSt with 1 result nodes - CONTENT : [execute_query ]
                            Query cond with 1 result nodes - CONTENT : [: global . seu_codigo is not null ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules
                              RULE: skipAllBooleanRules... executing!
                              SKIP_RULE: skipAllBooleanRules... executing!
                              Executing skip query...
                                Query s with 1 result nodes - CONTENT in line 29: [: global . seu_codigo is not null ]
                                Query exp with 1 result nodes - CONTENT : [: global . seu_codigo is not null ]
                              Locating skip query... 
                              Skip statement located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query expa with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                  Query exp with 1 result nodes - CONTENT in line 29: [: global . seu_codigo is not null ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules
                                    RULE: skipAllArithmeticRules... executing!
                                    SKIP_RULE: skipAllArithmeticRules... executing!
                                    Executing skip query...
                                      Query s with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                      Query exp with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                    Locating skip query... 
                                    Skip statement located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 29: [: global . seu_codigo ]
                                        Query ea with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :global.seu_codigo

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement
                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query st with 1 result nodes - CONTENT : [select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ]
                                  Query lvals with 1 result nodes - CONTENT : [existe ]
                                  Query exp with 1 result nodes - CONTENT in line 30: [select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression
                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query fromj with 0 result nodes
                                        Query fromn with 1 result nodes - CONTENT : [otg_peuropeos ]
                                        Query lvals with 1 result nodes - CONTENT : [existe ]
                                        Query w with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                        Query isCount with 1 result nodes - CONTENT in line 30: [count ]
                                        Query sexpr with 1 result nodes - CONTENT in line 30: [select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ]
                                        Query list with 1 result nodes - CONTENT : [count ( * ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn
                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [count ( * ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: count(*)

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr
                                          RULE: skipToConditionOr... executing!
                                          SKIP_RULE: skipToConditionOr... executing!
                                          Executing skip query...
                                            Query next with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                            Query c with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                          Locating skip query... 
                                          Skip statement located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr
                                          RULE: skipConditionOr... executing!
                                          SKIP_RULE: skipConditionOr... executing!
                                          Executing skip query...
                                            Query next with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                            Query co with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                          Locating skip query... 
                                          Skip statement located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd
                                          RULE: skipConditionAnd... executing!
                                          SKIP_RULE: skipConditionAnd... executing!
                                          Executing skip query...
                                            Query next with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                            Query ca with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                          Locating skip query... 
                                          Skip statement located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot
                                          RULE: skipConditionNot... executing!
                                          SKIP_RULE: skipConditionNot... executing!
                                          Executing skip query...
                                            Query next with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                            Query cn with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                          Locating skip query... 
                                          Skip statement located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query sc with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                              Query orOp with 0 result nodes
                                              Query eqOp with 1 result nodes - CONTENT in line 31: [peu_seu_codigo = : global . seu_codigo ]
                                              Query leqOp with 0 result nodes
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                              Query exp1 with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                              Query notEqOp with 0 result nodes
                                              Query gthOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 31: [peu_seu_codigo = : global . seu_codigo ]
                                              Query geqOp with 0 result nodes
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules
                                                RULE: skipAllArithmeticRules... executing!
                                                SKIP_RULE: skipAllArithmeticRules... executing!
                                                Executing skip query...
                                                  Query s with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                  Query exp with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                Locating skip query... 
                                                Skip statement located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                SKIP_RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Executing skip query...
                                                  Query cast1 with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                  Query s with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                  Query dec with 0 result nodes
                                                  Query cast2 with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                  Query iden with 1 result nodes - CONTENT in line 31: [peu_seu_codigo ]
                                                  Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                                  Query exp with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... 
                                                Skip statement located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query iden with 1 result nodes - CONTENT in line 31: [peu_seu_codigo ]
                                                    Query params with 0 result nodes
                                                    Query exp with 0 result nodes
                                                    Query fc with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - peu_seu_codigo (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules
                                                RULE: skipAllArithmeticRules... executing!
                                                SKIP_RULE: skipAllArithmeticRules... executing!
                                                Executing skip query...
                                                  Query s with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                                  Query exp with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                                Locating skip query... 
                                                Skip statement located! 
                                                Skipping to rule...
                                                RULE: createFormsVariableFromExpAdd
                                                RULE: createFormsVariableFromExpAdd... executing!
                                                  Model Element astm::gastm::IdentifierReference created
                                                  Executing queries...
                                                    Query se with 1 result nodes - CONTENT in line 31: [: global . seu_codigo ]
                                                    Query ea with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: simple_expression (kind) - Result: :global.seu_codigo

                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable
                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [otg_peuropeos ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: otg_peuropeos


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable
                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [existe ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: existe


                              (2/2) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf
                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query st with 1 result nodes - CONTENT : [existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ]
                                  Query thenSt with 1 result nodes - CONTENT : [execute_query ]
                                  Query elseSt with 9 result nodes
                                  Query cond with 1 result nodes - CONTENT : [existe != 0 ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules
                                    RULE: skipAllBooleanRules... executing!
                                    SKIP_RULE: skipAllBooleanRules... executing!
                                    Executing skip query...
                                      Query s with 1 result nodes - CONTENT : [existe != 0 ]
                                      Query exp with 1 result nodes - CONTENT : [existe != 0 ]
                                    Locating skip query... 
                                    Skip statement located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 32: [!= ]
                                        Query eqOp with 0 result nodes
                                        Query expl2 with 1 result nodes - CONTENT : [0 ]
                                        Query expl1 with 1 result nodes - CONTENT : [existe ]
                                        Query leqOp with 0 result nodes
                                        Query lthOp with 0 result nodes
                                        Query notEqOp with 1 result nodes - CONTENT in line 32: [!= ]
                                        Query exp with 1 result nodes - CONTENT : [existe != 0 ]
                                        Query gthOp with 0 result nodes
                                        Query geqOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules
                                          RULE: skipAllArithmeticRules... executing!
                                          SKIP_RULE: skipAllArithmeticRules... executing!
                                          Executing skip query...
                                            Query s with 1 result nodes - CONTENT : [existe ]
                                            Query exp with 1 result nodes - CONTENT : [existe ]
                                          Locating skip query... 
                                          Skip statement located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          SKIP_RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Executing skip query...
                                            Query cast1 with 1 result nodes - CONTENT : [existe ]
                                            Query s with 1 result nodes - CONTENT : [existe ]
                                            Query dec with 1 result nodes - CONTENT : [existe Number ; ]
                                            Query cast2 with 1 result nodes - CONTENT : [existe ]
                                            Query iden with 1 result nodes - CONTENT in line 32: [existe ]
                                            Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                            Query exp with 1 result nodes - CONTENT : [existe ]
                                          - IF detected...true!
                                          - IF detected...true!
                                          Locating skip query... 
                                          Skip statement located! RULE TO SKIP NOT LOCATED!
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules
                                          RULE: skipAllArithmeticRules... executing!
                                          SKIP_RULE: skipAllArithmeticRules... executing!
                                          Executing skip query...
                                            Query s with 1 result nodes - CONTENT : [0 ]
                                            Query exp with 1 result nodes - CONTENT : [0 ]
                                          Locating skip query... 
                                          Skip statement located! 