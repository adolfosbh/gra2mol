Gra2MoL Interpreter version 0.3

Executing...
Models created.
Initializing indexRules...
Initializing mixinRules...
Initializing packages...
Initializing hashes...

Executing rules...
RULE: mainRule
RULE: mainRule... executing!
  Model Element JavaSimplified::JavaModel created
  Executing queries...
    Query null with 1 result nodes - CONTENT : [D:\git\gra2mol\examples\Grammar2Model.examples.Java2JavaModel\files\src\ActionLogin.java D:\git\gra2mol\examples\Grammar2Model.examples.Java2JavaModel\files\src\ActionLogin.java package actionsstruts ; import beansstruts . BeanLogin ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . Action ; import org . apache . struts . action . ActionForm ; import org . apache . struts . action . ActionForward ; import org . apache . struts . action . ActionMapping ; public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } D:\git\gra2mol\examples\Grammar2Model.examples.Java2JavaModel\files\src\ActionPublicarNoticia.java D:\git\gra2mol\examples\Grammar2Model.examples.Java2JavaModel\files\src\ActionPublicarNoticia.java package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . * ; public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } D:\git\gra2mol\examples\Grammar2Model.examples.Java2JavaModel\files\src\ActionVerNoticia.java D:\git\gra2mol\examples\Grammar2Model.examples.Java2JavaModel\files\src\ActionVerNoticia.java package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . * ; import logicaNegocio . Noticia ; import org . apache . struts . action . * ; public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } D:\git\gra2mol\examples\Grammar2Model.examples.Java2JavaModel\files\src\BeanTablon.java D:\git\gra2mol\examples\Grammar2Model.examples.Java2JavaModel\files\src\BeanTablon.java package beansstruts ; import javax . servlet . http . HttpServletRequest ; import org . apache . struts . action . * ; public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
    Query newtypes with 46 result nodes
    Query createdTypes with 2 result nodes
    Query declarations with 4 result nodes
  Executing mappings...
    - QUERY_RESULT: 46 bindings:
      (1/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 13: [Action ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - Action (value) 

      (2/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 14: [ActionForward ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionForward (value) 

      (3/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 14: [ActionMapping ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionMapping (value) 

      (4/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 15: [ActionForm ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionForm (value) 

      (5/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 16: [HttpServletRequest ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - HttpServletRequest (value) 

      (6/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 17: [HttpServletResponse ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - HttpServletResponse (value) 

      (7/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 18: [BeanLogin ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - BeanLogin (value) 

      (8/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 18: [BeanLogin ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - BeanLogin (value) 

      (9/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 9: [Action ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - Action (value) 

      (10/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 10: [ActionForward ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionForward (value) 

      (11/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 10: [ActionMapping ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionMapping (value) 

      (12/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 11: [ActionForm ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionForm (value) 

      (13/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 12: [HttpServletRequest ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - HttpServletRequest (value) 

      (14/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 13: [HttpServletResponse ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - HttpServletResponse (value) 

      (15/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 14: [BeanTablon ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - BeanTablon (value) 

      (16/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 14: [BeanTablon ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - BeanTablon (value) 

      (17/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 19: [BeanTablon ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - BeanTablon (value) 

      (18/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 19: [BeanTablon ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - BeanTablon (value) 

      (19/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 10: [Action ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - Action (value) 

      (20/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 12: [ActionForward ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionForward (value) 

      (21/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 12: [ActionMapping ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionMapping (value) 

      (22/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 13: [ActionForm ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionForm (value) 

      (23/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 14: [HttpServletRequest ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - HttpServletRequest (value) 

      (24/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 15: [HttpServletResponse ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - HttpServletResponse (value) 

      (25/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 17: [BeanTablon ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - BeanTablon (value) 

      (26/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 17: [BeanTablon ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - BeanTablon (value) 

      (27/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 18: [Noticia ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - Noticia (value) 

      (28/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 6: [ActionForm ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionForm (value) 

      (29/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 8: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (30/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 10: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (31/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 11: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (32/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 12: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (33/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 15: [ActionErrors ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionErrors (value) 

      (34/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 15: [ActionMapping ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionMapping (value) 

      (35/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 15: [HttpServletRequest ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - HttpServletRequest (value) 

      (36/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 16: [ActionErrors ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionErrors (value) 

      (37/46) result node: type (kind). Rule... calling primitiveType rule

      RULE: primitiveType
      RULE: primitiveType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT : [boolean ]
          Query ptype with 1 result nodes - CONTENT in line 22: [boolean ]
        Executing mappings...
          - QUERY_ACCESS: variable: ptype - 
            node: primitiveType (kind) - leaf: TOKEN (kind) - boolean (value) 

      (38/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 22: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (39/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 29: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (40/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 33: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (41/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 37: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (42/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 41: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (43/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 45: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (44/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 49: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (45/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 53: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

      (46/46) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 57: [String ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - String (value) 

    - QUERY_RESULT: 2 bindings:
      (1/2) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 16: [ActionErrors ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionErrors (value) 

      (2/2) result node: type (kind). Rule... calling complexType rule

      RULE: complexType
      RULE: complexType... executing!
        Model Element JavaSimplified::Type created
        Executing queries...
          Query t with 1 result nodes - CONTENT in line 18: [ActionError ]
        Executing mappings...
          - QUERY_ACCESS: variable: t - 
            node: type (kind) - leaf: Identifier (kind) - ActionError (value) 

    - QUERY_RESULT: 4 bindings:
      (1/4) result node: typeDeclaration (kind). Rule... calling javaClass rule

      RULE: javaClass
      RULE: javaClass... executing!
        Model Element JavaSimplified::JavaClass created
        Executing queries...
          Query td with 1 result nodes - CONTENT : [public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
          Query classDecl with 1 result nodes - CONTENT in line 13: [class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
          Query fieldDecl with 0 result nodes
          Query mycompUnit with 1 result nodes - CONTENT : [package actionsstruts ; import beansstruts . BeanLogin ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . Action ; import org . apache . struts . action . ActionForm ; import org . apache . struts . action . ActionForward ; import org . apache . struts . action . ActionMapping ; public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
          Query methDecl with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
          Query imp with 7 result nodes
        Executing mappings...
          - CODE:  - node: importDeclaration (kind) - Result: import beansstruts . BeanLogin ; - node: importDeclaration (kind) - Result: import javax . servlet . http . HttpServletRequest ; - node: importDeclaration (kind) - Result: import javax . servlet . http . HttpServletResponse ; - node: importDeclaration (kind) - Result: import org . apache . struts . action . Action ; - node: importDeclaration (kind) - Result: import org . apache . struts . action . ActionForm ; - node: importDeclaration (kind) - Result: import org . apache . struts . action . ActionForward ; - node: importDeclaration (kind) - Result: import org . apache . struts . action . ActionMapping ;
          - OPERATION_CREATION: JavaSimplified::Name created
          - QUERY_ACCESS: variable: classDecl - 
            node: normalClassDeclaration (kind) - leaf: Identifier (kind) - ActionLogin (value) 
          - QUERY_ACCESS: variable: classDecl - 
            node: normalClassDeclaration (kind) - leaf: Identifier (kind) - ActionLogin (value) 
          - QUERY_RESULT: THE VARIABLE DOESNT EXIST
          - QUERY_RESULT: 1 bindings:
            (1/1) result node: classBodyDeclaration (kind). Rule... calling typedMethod rule

            RULE: typedMethod
            RULE: typedMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 14: [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                Query methParam with 4 result nodes
                Query methStat with 4 result nodes
                Query methType with 1 result nodes - CONTENT in line 14: [ActionForward ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - execute (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - execute (value) 
                - QUERY_RESULT: 4 bindings:
                  (1/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 14: [ActionMapping ]
                      Query paramDecl with 1 result nodes - CONTENT in line 14: [actionMapping ]
                      Query fpd with 1 result nodes - CONTENT : [ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionMapping (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionMapping (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                  (2/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 15: [ActionForm ]
                      Query paramDecl with 1 result nodes - CONTENT in line 15: [actionForm ]
                      Query fpd with 1 result nodes - CONTENT : [ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionForm (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionForm (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                  (3/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 16: [HttpServletRequest ]
                      Query paramDecl with 1 result nodes - CONTENT in line 16: [request ]
                      Query fpd with 1 result nodes - CONTENT : [HttpServletRequest request , HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                  (4/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 17: [HttpServletResponse ]
                      Query paramDecl with 1 result nodes - CONTENT in line 17: [response ]
                      Query fpd with 1 result nodes - CONTENT : [HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - response (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - response (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - QUERY_RESULT: 4 bindings:
                  (1/4) result node: blockStatement (kind). Rule... calling variableDeclarationStatement rule

                  RULE: variableDeclarationStatement
                  RULE: variableDeclarationStatement... executing!
                    Model Element JavaSimplified::VariableDeclarationStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [BeanLogin bean = ( BeanLogin ) actionForm ; ]
                      Query t with 1 result nodes - CONTENT in line 18: [BeanLogin ]
                      Query e with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                      Query lvd with 1 result nodes - CONTENT in line 18: [BeanLogin bean = ( BeanLogin ) actionForm ; ]
                      Query vd with 1 result nodes - CONTENT in line 18: [bean = ( BeanLogin ) actionForm ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: BeanLogin bean = ( BeanLogin ) actionForm ;
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - bean (value) 
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - bean (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling castExpression rule

                        RULE: castExpression
                        RULE: castExpression... executing!
                          Model Element JavaSimplified::CastExpression created
                          Executing queries...
                            Query cast with 1 result nodes - CONTENT in line 18: [( BeanLogin ) actionForm ]
                            Query t with 1 result nodes - CONTENT in line 18: [BeanLogin ]
                            Query e with 1 result nodes - CONTENT : [actionForm ]
                            Query expr with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                          Executing mappings...
                            - CODE:  - node: castExpression (kind) - Result: ( BeanLogin ) actionForm
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling nameExpr rule

                              RULE: nameExpr
                              RULE: nameExpr... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query pri with 1 result nodes - CONTENT in line 18: [actionForm ]
                                  Query expr with 1 result nodes - CONTENT : [actionForm ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionForm (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionForm (value) 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                              RULE: complexType
                              RULE: complexType... cached!!


                  (2/4) result node: blockStatement (kind). Rule... calling ifStatement rule

                  RULE: ifStatement
                  RULE: ifStatement... executing!
                    Model Element JavaSimplified::IfStatement created
                    Executing queries...
                      Query st with 1 result nodes - CONTENT in line 19: [if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } ]
                      Query bst with 1 result nodes - CONTENT : [if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } ]
                      Query e with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; }
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                        RULE: normalmethodInvocationExpr
                        RULE: normalmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 4 result nodes
                            Query expr with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" )
                            - QUERY_RESULT: 4 bindings:
                              (1/4) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 19: [bean . getUsuario ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 

                              (2/4) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                              (3/4) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 19: [bean . getClave ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 

                              (4/4) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                            - QUERY_RESULT: 4 bindings:
                              (1/4) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 0 result nodes
                                  Query unexp with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                  Query pri with 1 result nodes - CONTENT in line 19: [bean . getUsuario ( ) ]
                                  Query child with 1 result nodes - CONTENT in line 19: [. equals ( "user" ) ]
                                Executing mappings...
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getUsuario (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getUsuario (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                    RULE: selectorMethodCall
                                    RULE: selectorMethodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 1 result nodes - CONTENT : ["user" ]
                                        Query unexp with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                        Query sel with 1 result nodes - CONTENT in line 19: [. equals ( "user" ) ]
                                        Query child with 1 result nodes - CONTENT in line 19: [. equals ( "user" ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                          RULE: stringLiteralExpr
                                          RULE: stringLiteralExpr... executing!
                                            Model Element JavaSimplified::Literal created
                                            Executing queries...
                                              Query expr with 1 result nodes - CONTENT : ["user" ]
                                              Query strl with 1 result nodes - CONTENT in line 19: ["user" ]
                                            Executing mappings...
                                              - VALUE: type (property) - STRING (value)
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "user" (value) 
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "user" (value) 

                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - equals (value) 
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - equals (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                          RULE: selectorMethodCall
                                          RULE: selectorMethodCall... cached!!


                              (2/4) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method
                              (3/4) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 0 result nodes
                                  Query unexp with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                  Query pri with 1 result nodes - CONTENT in line 19: [bean . getClave ( ) ]
                                  Query child with 1 result nodes - CONTENT in line 19: [. equals ( "user" ) ]
                                Executing mappings...
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getClave (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getClave (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                    RULE: selectorMethodCall
                                    RULE: selectorMethodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 1 result nodes - CONTENT : ["user" ]
                                        Query unexp with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                        Query sel with 1 result nodes - CONTENT in line 19: [. equals ( "user" ) ]
                                        Query child with 1 result nodes - CONTENT in line 19: [. equals ( "user" ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                          RULE: stringLiteralExpr
                                          RULE: stringLiteralExpr... executing!
                                            Model Element JavaSimplified::Literal created
                                            Executing queries...
                                              Query expr with 1 result nodes - CONTENT : ["user" ]
                                              Query strl with 1 result nodes - CONTENT in line 19: ["user" ]
                                            Executing mappings...
                                              - VALUE: type (property) - STRING (value)
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "user" (value) 
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "user" (value) 

                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - equals (value) 
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - equals (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                          RULE: selectorMethodCall
                                          RULE: selectorMethodCall... cached!!


                              (4/4) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method

                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: ifst

                  (3/4) result node: blockStatement (kind). Rule... calling expressionStatement rule

                  RULE: expressionStatement
                  RULE: expressionStatement... executing!
                    Model Element JavaSimplified::ExpressionStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; ]
                      Query e with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                    Executing mappings...
                      - CODE:  - node: expression (kind) - Result: request . getSession ( ) . setAttribute ( "usuario" , "invitado" )
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                        RULE: normalmethodInvocationExpr
                        RULE: normalmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 3 result nodes
                            Query expr with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: request . getSession ( ) . setAttribute ( "usuario" , "invitado" )
                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 22: [request . getSession ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 

                              (2/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                              (3/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 0 result nodes
                                  Query unexp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                                  Query pri with 1 result nodes - CONTENT in line 22: [request . getSession ( ) ]
                                  Query child with 1 result nodes - CONTENT in line 22: [. setAttribute ( "usuario" , "invitado" ) ]
                                Executing mappings...
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                    RULE: selectorMethodCall
                                    RULE: selectorMethodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 2 result nodes
                                        Query unexp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                                        Query sel with 1 result nodes - CONTENT in line 22: [. setAttribute ( "usuario" , "invitado" ) ]
                                        Query child with 1 result nodes - CONTENT in line 22: [. setAttribute ( "usuario" , "invitado" ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                          RULE: stringLiteralExpr
                                          RULE: stringLiteralExpr... executing!
                                            Model Element JavaSimplified::Literal created
                                            Executing queries...
                                              Query expr with 1 result nodes - CONTENT : ["usuario" ]
                                              Query strl with 1 result nodes - CONTENT in line 22: ["usuario" ]
                                            Executing mappings...
                                              - VALUE: type (property) - STRING (value)
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "usuario" (value) 
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "usuario" (value) 

                                          (2/2) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                          RULE: stringLiteralExpr
                                          RULE: stringLiteralExpr... executing!
                                            Model Element JavaSimplified::Literal created
                                            Executing queries...
                                              Query expr with 1 result nodes - CONTENT : ["invitado" ]
                                              Query strl with 1 result nodes - CONTENT in line 22: ["invitado" ]
                                            Executing mappings...
                                              - VALUE: type (property) - STRING (value)
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "invitado" (value) 
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "invitado" (value) 

                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - setAttribute (value) 
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - setAttribute (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                          RULE: selectorMethodCall
                                          RULE: selectorMethodCall... cached!!


                              (2/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method
                              (3/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method


                  (4/4) result node: blockStatement (kind). Rule... calling ifStatement rule

                  RULE: ifStatement
                  RULE: ifStatement... executing!
                    Model Element JavaSimplified::IfStatement created
                    Executing queries...
                      Query st with 1 result nodes - CONTENT in line 23: [if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; ]
                      Query bst with 1 result nodes - CONTENT : [if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; ]
                      Query e with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ;
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                        RULE: normalmethodInvocationExpr
                        RULE: normalmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 3 result nodes
                            Query expr with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null
                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 23: [request . getSession ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 

                              (2/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                              (3/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 0 result nodes
                                  Query unexp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                  Query pri with 1 result nodes - CONTENT in line 23: [request . getSession ( ) ]
                                  Query child with 1 result nodes - CONTENT in line 23: [. getAttribute ( "datosPublicacion" ) ]
                                Executing mappings...
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                    RULE: selectorMethodCall
                                    RULE: selectorMethodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                        Query unexp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                        Query sel with 1 result nodes - CONTENT in line 23: [. getAttribute ( "datosPublicacion" ) ]
                                        Query child with 1 result nodes - CONTENT in line 23: [. getAttribute ( "datosPublicacion" ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                          RULE: stringLiteralExpr
                                          RULE: stringLiteralExpr... executing!
                                            Model Element JavaSimplified::Literal created
                                            Executing queries...
                                              Query expr with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                              Query strl with 1 result nodes - CONTENT in line 23: ["datosPublicacion" ]
                                            Executing mappings...
                                              - VALUE: type (property) - STRING (value)
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "datosPublicacion" (value) 
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "datosPublicacion" (value) 

                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - getAttribute (value) 
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - getAttribute (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                          RULE: selectorMethodCall
                                          RULE: selectorMethodCall... cached!!


                              (2/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method
                              (3/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method

                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: blockStatement (kind). Rule... calling returnStatement rule

                        RULE: returnStatement
                        RULE: returnStatement... executing!
                          Model Element JavaSimplified::ReturnStatement created
                          Executing queries...
                            Query retExp with 2 result nodes
                            Query bst with 1 result nodes - CONTENT in line 23: [if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                              RULE: normalmethodInvocationExpr
                              RULE: normalmethodInvocationExpr... executing!
                                Model Element JavaSimplified::MethodInvocation created
                                Executing queries...
                                  Query pri with 2 result nodes
                                  Query expr with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                Executing mappings...
                                  - CODE:  - node: expression (kind) - Result: actionMapping . findForward ( "publicar" )
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: primary (kind). Rule... calling auxName rule

                                    RULE: auxName
                                    RULE: auxName... executing!
                                      Model Element JavaSimplified::Name created
                                      Executing queries...
                                        Query p with 1 result nodes - CONTENT in line 24: [actionMapping . findForward ( "publicar" ) ]
                                      Executing mappings...
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 

                                    (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: primary (kind). Rule... calling methodCall rule

                                    RULE: methodCall
                                    RULE: methodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 1 result nodes - CONTENT : ["publicar" ]
                                        Query unexp with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                        Query pri with 1 result nodes - CONTENT in line 24: [actionMapping . findForward ( "publicar" ) ]
                                        Query child with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                          RULE: stringLiteralExpr
                                          RULE: stringLiteralExpr... executing!
                                            Model Element JavaSimplified::Literal created
                                            Executing queries...
                                              Query expr with 1 result nodes - CONTENT : ["publicar" ]
                                              Query strl with 1 result nodes - CONTENT in line 24: ["publicar" ]
                                            Executing mappings...
                                              - VALUE: type (property) - STRING (value)
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "publicar" (value) 
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "publicar" (value) 

                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                    (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method

                              (2/2) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                              RULE: normalmethodInvocationExpr
                              RULE: normalmethodInvocationExpr... executing!
                                Model Element JavaSimplified::MethodInvocation created
                                Executing queries...
                                  Query pri with 2 result nodes
                                  Query expr with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                Executing mappings...
                                  - CODE:  - node: expression (kind) - Result: actionMapping . findForward ( "exito" )
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: primary (kind). Rule... calling auxName rule

                                    RULE: auxName
                                    RULE: auxName... executing!
                                      Model Element JavaSimplified::Name created
                                      Executing queries...
                                        Query p with 1 result nodes - CONTENT in line 25: [actionMapping . findForward ( "exito" ) ]
                                      Executing mappings...
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 

                                    (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: primary (kind). Rule... calling methodCall rule

                                    RULE: methodCall
                                    RULE: methodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 1 result nodes - CONTENT : ["exito" ]
                                        Query unexp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                        Query pri with 1 result nodes - CONTENT in line 25: [actionMapping . findForward ( "exito" ) ]
                                        Query child with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                          RULE: stringLiteralExpr
                                          RULE: stringLiteralExpr... executing!
                                            Model Element JavaSimplified::Literal created
                                            Executing queries...
                                              Query expr with 1 result nodes - CONTENT : ["exito" ]
                                              Query strl with 1 result nodes - CONTENT in line 25: ["exito" ]
                                            Executing mappings...
                                              - VALUE: type (property) - STRING (value)
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "exito" (value) 
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "exito" (value) 

                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                    (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method





      (2/4) result node: typeDeclaration (kind). Rule... calling javaClass rule

      RULE: javaClass
      RULE: javaClass... executing!
        Model Element JavaSimplified::JavaClass created
        Executing queries...
          Query td with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
          Query classDecl with 1 result nodes - CONTENT in line 9: [class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
          Query fieldDecl with 0 result nodes
          Query mycompUnit with 1 result nodes - CONTENT : [package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . * ; public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
          Query methDecl with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
          Query imp with 5 result nodes
        Executing mappings...
          - CODE:  - node: importDeclaration (kind) - Result: import beansstruts . BeanTablon ; - node: importDeclaration (kind) - Result: import controladores . ControladorNoticias ; - node: importDeclaration (kind) - Result: import javax . servlet . http . HttpServletRequest ; - node: importDeclaration (kind) - Result: import javax . servlet . http . HttpServletResponse ; - node: importDeclaration (kind) - Result: import org . apache . struts . action . * ;
          - OPERATION_CREATION: JavaSimplified::Name created
          - QUERY_ACCESS: variable: classDecl - 
            node: normalClassDeclaration (kind) - leaf: Identifier (kind) - ActionPublicarNoticia (value) 
          - QUERY_ACCESS: variable: classDecl - 
            node: normalClassDeclaration (kind) - leaf: Identifier (kind) - ActionPublicarNoticia (value) 
          - QUERY_RESULT: THE VARIABLE DOESNT EXIST
          - QUERY_RESULT: 1 bindings:
            (1/1) result node: classBodyDeclaration (kind). Rule... calling typedMethod rule

            RULE: typedMethod
            RULE: typedMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 10: [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                Query methParam with 4 result nodes
                Query methStat with 6 result nodes
                Query methType with 1 result nodes - CONTENT in line 10: [ActionForward ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - execute (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - execute (value) 
                - QUERY_RESULT: 4 bindings:
                  (1/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 10: [ActionMapping ]
                      Query paramDecl with 1 result nodes - CONTENT in line 10: [actionMapping ]
                      Query fpd with 1 result nodes - CONTENT : [ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionMapping (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionMapping (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                  (2/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 11: [ActionForm ]
                      Query paramDecl with 1 result nodes - CONTENT in line 11: [actionForm ]
                      Query fpd with 1 result nodes - CONTENT : [ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionForm (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionForm (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                  (3/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 12: [HttpServletRequest ]
                      Query paramDecl with 1 result nodes - CONTENT in line 12: [request ]
                      Query fpd with 1 result nodes - CONTENT : [HttpServletRequest request , HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                  (4/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 13: [HttpServletResponse ]
                      Query paramDecl with 1 result nodes - CONTENT in line 13: [response ]
                      Query fpd with 1 result nodes - CONTENT : [HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - response (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - response (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - QUERY_RESULT: 6 bindings:
                  (1/6) result node: blockStatement (kind). Rule... calling variableDeclarationStatement rule

                  RULE: variableDeclarationStatement
                  RULE: variableDeclarationStatement... executing!
                    Model Element JavaSimplified::VariableDeclarationStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                      Query t with 1 result nodes - CONTENT in line 14: [BeanTablon ]
                      Query e with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                      Query lvd with 1 result nodes - CONTENT in line 14: [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                      Query vd with 1 result nodes - CONTENT in line 14: [bean = ( BeanTablon ) actionForm ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: BeanTablon bean = ( BeanTablon ) actionForm ;
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - bean (value) 
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - bean (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling castExpression rule

                        RULE: castExpression
                        RULE: castExpression... executing!
                          Model Element JavaSimplified::CastExpression created
                          Executing queries...
                            Query cast with 1 result nodes - CONTENT in line 14: [( BeanTablon ) actionForm ]
                            Query t with 1 result nodes - CONTENT in line 14: [BeanTablon ]
                            Query e with 1 result nodes - CONTENT : [actionForm ]
                            Query expr with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                          Executing mappings...
                            - CODE:  - node: castExpression (kind) - Result: ( BeanTablon ) actionForm
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling nameExpr rule

                              RULE: nameExpr
                              RULE: nameExpr... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query pri with 1 result nodes - CONTENT in line 14: [actionForm ]
                                  Query expr with 1 result nodes - CONTENT : [actionForm ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionForm (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionForm (value) 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                              RULE: complexType
                              RULE: complexType... cached!!


                  (2/6) result node: blockStatement (kind). Rule... calling ifStatement rule

                  RULE: ifStatement
                  RULE: ifStatement... executing!
                    Model Element JavaSimplified::IfStatement created
                    Executing queries...
                      Query st with 1 result nodes - CONTENT in line 15: [if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } ]
                      Query bst with 1 result nodes - CONTENT : [if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } ]
                      Query e with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) == null ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; }
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                        RULE: normalmethodInvocationExpr
                        RULE: normalmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 3 result nodes
                            Query expr with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) == null ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: request . getSession ( ) . getAttribute ( "usuario" ) == null
                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 15: [request . getSession ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 

                              (2/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                              (3/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 0 result nodes
                                  Query unexp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                  Query pri with 1 result nodes - CONTENT in line 15: [request . getSession ( ) ]
                                  Query child with 1 result nodes - CONTENT in line 15: [. getAttribute ( "usuario" ) ]
                                Executing mappings...
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                    RULE: selectorMethodCall
                                    RULE: selectorMethodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 1 result nodes - CONTENT : ["usuario" ]
                                        Query unexp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                        Query sel with 1 result nodes - CONTENT in line 15: [. getAttribute ( "usuario" ) ]
                                        Query child with 1 result nodes - CONTENT in line 15: [. getAttribute ( "usuario" ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                          RULE: stringLiteralExpr
                                          RULE: stringLiteralExpr... executing!
                                            Model Element JavaSimplified::Literal created
                                            Executing queries...
                                              Query expr with 1 result nodes - CONTENT : ["usuario" ]
                                              Query strl with 1 result nodes - CONTENT in line 15: ["usuario" ]
                                            Executing mappings...
                                              - VALUE: type (property) - STRING (value)
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "usuario" (value) 
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "usuario" (value) 

                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - getAttribute (value) 
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - getAttribute (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                          RULE: selectorMethodCall
                                          RULE: selectorMethodCall... cached!!


                              (2/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method
                              (3/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method

                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: ifst

                  (3/6) result node: blockStatement (kind). Rule... calling variableDeclarationStatement rule

                  RULE: variableDeclarationStatement
                  RULE: variableDeclarationStatement... executing!
                    Model Element JavaSimplified::VariableDeclarationStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; ]
                      Query t with 1 result nodes - CONTENT in line 19: [BeanTablon ]
                      Query e with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                      Query lvd with 1 result nodes - CONTENT in line 19: [BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; ]
                      Query vd with 1 result nodes - CONTENT in line 19: [datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ;
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - datos (value) 
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - datos (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                        RULE: normalmethodInvocationExpr
                        RULE: normalmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 2 result nodes
                            Query expr with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" )
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 19: [request . getSession ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 

                              (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 0 result nodes
                                  Query unexp with 0 result nodes
                                  Query pri with 1 result nodes - CONTENT in line 19: [request . getSession ( ) ]
                                  Query child with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                              (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method


                  (4/6) result node: blockStatement (kind). Rule... calling ifStatement rule

                  RULE: ifStatement
                  RULE: ifStatement... executing!
                    Model Element JavaSimplified::IfStatement created
                    Executing queries...
                      Query st with 1 result nodes - CONTENT in line 20: [if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ]
                      Query bst with 1 result nodes - CONTENT : [if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ]
                      Query e with 1 result nodes - CONTENT : [datos != null ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; }
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling nameExpr rule

                        RULE: nameExpr
                        RULE: nameExpr... executing!
                          Model Element JavaSimplified::Name created
                          Executing queries...
                            Query pri with 1 result nodes - CONTENT in line 20: [datos ]
                            Query expr with 1 result nodes - CONTENT : [datos != null ]
                          Executing mappings...
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - datos (value) 
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - datos (value) 

                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: ifst

                  (5/6) result node: blockStatement (kind). Rule... calling expressionStatement rule

                  RULE: expressionStatement
                  RULE: expressionStatement... executing!
                    Model Element JavaSimplified::ExpressionStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; ]
                      Query e with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                    Executing mappings...
                      - CODE:  - node: expression (kind) - Result: ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) )
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                        RULE: normalmethodInvocationExpr
                        RULE: normalmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 4 result nodes
                            Query expr with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) )
                            - QUERY_RESULT: 4 bindings:
                              (1/4) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 24: [ControladorNoticias . getInstancia ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - ControladorNoticias (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - ControladorNoticias (value) 

                              (2/4) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 25: [bean . getTitulo ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 

                              (3/4) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 26: [bean . getContenido ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 

                              (4/4) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 27: [bean . getAutor ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 

                            - QUERY_RESULT: 4 bindings:
                              (1/4) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 0 result nodes
                                  Query unexp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                  Query pri with 1 result nodes - CONTENT in line 24: [ControladorNoticias . getInstancia ( ) ]
                                  Query child with 1 result nodes - CONTENT in line 24: [. addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                Executing mappings...
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getInstancia (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getInstancia (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                    RULE: selectorMethodCall
                                    RULE: selectorMethodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 3 result nodes
                                        Query unexp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                        Query sel with 1 result nodes - CONTENT in line 24: [. addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                        Query child with 1 result nodes - CONTENT in line 24: [. addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 3 bindings:
                                          (1/3) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                                          RULE: normalmethodInvocationExpr
                                          RULE: normalmethodInvocationExpr... executing!
                                            Model Element JavaSimplified::MethodInvocation created
                                            Executing queries...
                                              Query pri with 1 result nodes - CONTENT in line 25: [bean . getTitulo ( ) ]
                                              Query expr with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                            Executing mappings...
                                              - CODE:  - node: expression (kind) - Result: bean . getTitulo ( )
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: primary (kind). Rule... calling auxName rule

                                                RULE: auxName
                                                RULE: auxName... cached!!
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: primary (kind). Rule... calling methodCall rule

                                                RULE: methodCall
                                                RULE: methodCall... executing!
                                                  Model Element JavaSimplified::MethodCall created
                                                  Executing queries...
                                                    Query args with 0 result nodes
                                                    Query unexp with 0 result nodes
                                                    Query pri with 1 result nodes - CONTENT in line 25: [bean . getTitulo ( ) ]
                                                    Query child with 0 result nodes
                                                  Executing mappings...
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                    - OPERATION_CREATION: JavaSimplified::Name created
                                                    - QUERY_ACCESS: variable: pri - 
                                                      node: primary (kind) - leaf: Identifier (kind) - getTitulo (value) 
                                                    - QUERY_ACCESS: variable: pri - 
                                                      node: primary (kind) - leaf: Identifier (kind) - getTitulo (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                          (2/3) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                                          RULE: normalmethodInvocationExpr
                                          RULE: normalmethodInvocationExpr... executing!
                                            Model Element JavaSimplified::MethodInvocation created
                                            Executing queries...
                                              Query pri with 1 result nodes - CONTENT in line 26: [bean . getContenido ( ) ]
                                              Query expr with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                            Executing mappings...
                                              - CODE:  - node: expression (kind) - Result: bean . getContenido ( )
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: primary (kind). Rule... calling auxName rule

                                                RULE: auxName
                                                RULE: auxName... cached!!
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: primary (kind). Rule... calling methodCall rule

                                                RULE: methodCall
                                                RULE: methodCall... executing!
                                                  Model Element JavaSimplified::MethodCall created
                                                  Executing queries...
                                                    Query args with 0 result nodes
                                                    Query unexp with 0 result nodes
                                                    Query pri with 1 result nodes - CONTENT in line 26: [bean . getContenido ( ) ]
                                                    Query child with 0 result nodes
                                                  Executing mappings...
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                    - OPERATION_CREATION: JavaSimplified::Name created
                                                    - QUERY_ACCESS: variable: pri - 
                                                      node: primary (kind) - leaf: Identifier (kind) - getContenido (value) 
                                                    - QUERY_ACCESS: variable: pri - 
                                                      node: primary (kind) - leaf: Identifier (kind) - getContenido (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                          (3/3) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                                          RULE: normalmethodInvocationExpr
                                          RULE: normalmethodInvocationExpr... executing!
                                            Model Element JavaSimplified::MethodInvocation created
                                            Executing queries...
                                              Query pri with 1 result nodes - CONTENT in line 27: [bean . getAutor ( ) ]
                                              Query expr with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                            Executing mappings...
                                              - CODE:  - node: expression (kind) - Result: bean . getAutor ( )
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: primary (kind). Rule... calling auxName rule

                                                RULE: auxName
                                                RULE: auxName... cached!!
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: primary (kind). Rule... calling methodCall rule

                                                RULE: methodCall
                                                RULE: methodCall... executing!
                                                  Model Element JavaSimplified::MethodCall created
                                                  Executing queries...
                                                    Query args with 0 result nodes
                                                    Query unexp with 0 result nodes
                                                    Query pri with 1 result nodes - CONTENT in line 27: [bean . getAutor ( ) ]
                                                    Query child with 0 result nodes
                                                  Executing mappings...
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                    - OPERATION_CREATION: JavaSimplified::Name created
                                                    - QUERY_ACCESS: variable: pri - 
                                                      node: primary (kind) - leaf: Identifier (kind) - getAutor (value) 
                                                    - QUERY_ACCESS: variable: pri - 
                                                      node: primary (kind) - leaf: Identifier (kind) - getAutor (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - addNoticia (value) 
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - addNoticia (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                          RULE: selectorMethodCall
                                          RULE: selectorMethodCall... cached!!


                              (2/4) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... cached!!
                              (3/4) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... cached!!
                              (4/4) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... cached!!


                  (6/6) result node: blockStatement (kind). Rule... calling returnStatement rule

                  RULE: returnStatement
                  RULE: returnStatement... executing!
                    Model Element JavaSimplified::ReturnStatement created
                    Executing queries...
                      Query retExp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                      Query bst with 1 result nodes - CONTENT : [return ( actionMapping . findForward ( "exito" ) ) ; ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling parenmethodInvocationExpr rule

                        RULE: parenmethodInvocationExpr
                        RULE: parenmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 1 result nodes - CONTENT in line 29: [actionMapping . findForward ( "exito" ) ]
                            Query expr with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: ( actionMapping . findForward ( "exito" ) )
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 29: [actionMapping . findForward ( "exito" ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 1 result nodes - CONTENT : ["exito" ]
                                  Query unexp with 0 result nodes
                                  Query pri with 1 result nodes - CONTENT in line 29: [actionMapping . findForward ( "exito" ) ]
                                  Query child with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                    RULE: stringLiteralExpr
                                    RULE: stringLiteralExpr... executing!
                                      Model Element JavaSimplified::Literal created
                                      Executing queries...
                                        Query expr with 1 result nodes - CONTENT : ["exito" ]
                                        Query strl with 1 result nodes - CONTENT in line 29: ["exito" ]
                                      Executing mappings...
                                        - VALUE: type (property) - STRING (value)
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "exito" (value) 
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "exito" (value) 

                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST





      (3/4) result node: typeDeclaration (kind). Rule... calling javaClass rule

      RULE: javaClass
      RULE: javaClass... executing!
        Model Element JavaSimplified::JavaClass created
        Executing queries...
          Query td with 1 result nodes - CONTENT : [public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
          Query classDecl with 1 result nodes - CONTENT in line 10: [class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
          Query fieldDecl with 0 result nodes
          Query mycompUnit with 1 result nodes - CONTENT : [package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . * ; import logicaNegocio . Noticia ; import org . apache . struts . action . * ; public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
          Query methDecl with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
          Query imp with 5 result nodes
        Executing mappings...
          - CODE:  - node: importDeclaration (kind) - Result: import beansstruts . BeanTablon ; - node: importDeclaration (kind) - Result: import controladores . ControladorNoticias ; - node: importDeclaration (kind) - Result: import javax . servlet . http . * ; - node: importDeclaration (kind) - Result: import logicaNegocio . Noticia ; - node: importDeclaration (kind) - Result: import org . apache . struts . action . * ;
          - OPERATION_CREATION: JavaSimplified::Name created
          - QUERY_ACCESS: variable: classDecl - 
            node: normalClassDeclaration (kind) - leaf: Identifier (kind) - ActionVerNoticia (value) 
          - QUERY_ACCESS: variable: classDecl - 
            node: normalClassDeclaration (kind) - leaf: Identifier (kind) - ActionVerNoticia (value) 
          - QUERY_RESULT: THE VARIABLE DOESNT EXIST
          - QUERY_RESULT: 1 bindings:
            (1/1) result node: classBodyDeclaration (kind). Rule... calling typedMethod rule

            RULE: typedMethod
            RULE: typedMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 12: [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                Query methParam with 4 result nodes
                Query methStat with 7 result nodes
                Query methType with 1 result nodes - CONTENT in line 12: [ActionForward ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - execute (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - execute (value) 
                - QUERY_RESULT: 4 bindings:
                  (1/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 12: [ActionMapping ]
                      Query paramDecl with 1 result nodes - CONTENT in line 12: [actionMapping ]
                      Query fpd with 1 result nodes - CONTENT : [ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionMapping (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionMapping (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                  (2/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 13: [ActionForm ]
                      Query paramDecl with 1 result nodes - CONTENT in line 13: [actionForm ]
                      Query fpd with 1 result nodes - CONTENT : [ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionForm (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionForm (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                  (3/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 14: [HttpServletRequest ]
                      Query paramDecl with 1 result nodes - CONTENT in line 14: [request ]
                      Query fpd with 1 result nodes - CONTENT : [HttpServletRequest request , HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                  (4/4) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 15: [HttpServletResponse ]
                      Query paramDecl with 1 result nodes - CONTENT in line 15: [response ]
                      Query fpd with 1 result nodes - CONTENT : [HttpServletResponse response ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - response (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - response (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - QUERY_RESULT: 7 bindings:
                  (1/7) result node: blockStatement (kind). Rule... calling variableDeclarationStatement rule

                  RULE: variableDeclarationStatement
                  RULE: variableDeclarationStatement... executing!
                    Model Element JavaSimplified::VariableDeclarationStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                      Query t with 1 result nodes - CONTENT in line 17: [BeanTablon ]
                      Query e with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                      Query lvd with 1 result nodes - CONTENT in line 17: [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                      Query vd with 1 result nodes - CONTENT in line 17: [bean = ( BeanTablon ) actionForm ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: BeanTablon bean = ( BeanTablon ) actionForm ;
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - bean (value) 
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - bean (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling castExpression rule

                        RULE: castExpression
                        RULE: castExpression... executing!
                          Model Element JavaSimplified::CastExpression created
                          Executing queries...
                            Query cast with 1 result nodes - CONTENT in line 17: [( BeanTablon ) actionForm ]
                            Query t with 1 result nodes - CONTENT in line 17: [BeanTablon ]
                            Query e with 1 result nodes - CONTENT : [actionForm ]
                            Query expr with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                          Executing mappings...
                            - CODE:  - node: castExpression (kind) - Result: ( BeanTablon ) actionForm
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling nameExpr rule

                              RULE: nameExpr
                              RULE: nameExpr... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query pri with 1 result nodes - CONTENT in line 17: [actionForm ]
                                  Query expr with 1 result nodes - CONTENT : [actionForm ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionForm (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionForm (value) 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                              RULE: complexType
                              RULE: complexType... cached!!


                  (2/7) result node: blockStatement (kind). Rule... calling variableDeclarationStatement rule

                  RULE: variableDeclarationStatement
                  RULE: variableDeclarationStatement... executing!
                    Model Element JavaSimplified::VariableDeclarationStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; ]
                      Query t with 1 result nodes - CONTENT in line 18: [Noticia ]
                      Query e with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                      Query lvd with 1 result nodes - CONTENT in line 18: [Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; ]
                      Query vd with 1 result nodes - CONTENT in line 18: [noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ;
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - noticia (value) 
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - noticia (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                        RULE: normalmethodInvocationExpr
                        RULE: normalmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 2 result nodes
                            Query expr with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) )
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 18: [ControladorNoticias . getInstancia ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - ControladorNoticias (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - ControladorNoticias (value) 

                              (2/2) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 18: [bean . getTituloSeleccionado ( ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 0 result nodes
                                  Query unexp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                  Query pri with 1 result nodes - CONTENT in line 18: [ControladorNoticias . getInstancia ( ) ]
                                  Query child with 1 result nodes - CONTENT in line 18: [. findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                Executing mappings...
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getInstancia (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - getInstancia (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                    RULE: selectorMethodCall
                                    RULE: selectorMethodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                        Query unexp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                        Query sel with 1 result nodes - CONTENT in line 18: [. findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                        Query child with 1 result nodes - CONTENT in line 18: [. findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                                          RULE: normalmethodInvocationExpr
                                          RULE: normalmethodInvocationExpr... executing!
                                            Model Element JavaSimplified::MethodInvocation created
                                            Executing queries...
                                              Query pri with 1 result nodes - CONTENT in line 18: [bean . getTituloSeleccionado ( ) ]
                                              Query expr with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                            Executing mappings...
                                              - CODE:  - node: expression (kind) - Result: bean . getTituloSeleccionado ( )
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: primary (kind). Rule... calling auxName rule

                                                RULE: auxName
                                                RULE: auxName... cached!!
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: primary (kind). Rule... calling methodCall rule

                                                RULE: methodCall
                                                RULE: methodCall... executing!
                                                  Model Element JavaSimplified::MethodCall created
                                                  Executing queries...
                                                    Query args with 0 result nodes
                                                    Query unexp with 0 result nodes
                                                    Query pri with 1 result nodes - CONTENT in line 18: [bean . getTituloSeleccionado ( ) ]
                                                    Query child with 0 result nodes
                                                  Executing mappings...
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                    - OPERATION_CREATION: JavaSimplified::Name created
                                                    - QUERY_ACCESS: variable: pri - 
                                                      node: primary (kind) - leaf: Identifier (kind) - getTituloSeleccionado (value) 
                                                    - QUERY_ACCESS: variable: pri - 
                                                      node: primary (kind) - leaf: Identifier (kind) - getTituloSeleccionado (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - findNoticia (value) 
                                        - QUERY_ACCESS: variable: sel - 
                                          node: selector (kind) - leaf: Identifier (kind) - findNoticia (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: selector (kind). Rule... calling selectorMethodCall rule

                                          RULE: selectorMethodCall
                                          RULE: selectorMethodCall... cached!!


                              (2/2) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... cached!!


                  (3/7) result node: blockStatement (kind). Rule... calling expressionStatement rule

                  RULE: expressionStatement
                  RULE: expressionStatement... executing!
                    Model Element JavaSimplified::ExpressionStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ; ]
                      Query e with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                    Executing mappings...
                      - CODE:  - node: expression (kind) - Result: bean . setTitulo ( "" )
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                        RULE: normalmethodInvocationExpr
                        RULE: normalmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 2 result nodes
                            Query expr with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: bean . setTitulo ( "" )
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 19: [bean . setTitulo ( "" ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 

                              (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 1 result nodes - CONTENT : ["" ]
                                  Query unexp with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                                  Query pri with 1 result nodes - CONTENT in line 19: [bean . setTitulo ( "" ) ]
                                  Query child with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                    RULE: stringLiteralExpr
                                    RULE: stringLiteralExpr... executing!
                                      Model Element JavaSimplified::Literal created
                                      Executing queries...
                                        Query expr with 1 result nodes - CONTENT : ["" ]
                                        Query strl with 1 result nodes - CONTENT in line 19: ["" ]
                                      Executing mappings...
                                        - VALUE: type (property) - STRING (value)
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "" (value) 
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "" (value) 

                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - setTitulo (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - setTitulo (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                              (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method


                  (4/7) result node: blockStatement (kind). Rule... calling expressionStatement rule

                  RULE: expressionStatement
                  RULE: expressionStatement... executing!
                    Model Element JavaSimplified::ExpressionStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ; ]
                      Query e with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                    Executing mappings...
                      - CODE:  - node: expression (kind) - Result: bean . setContenido ( "" )
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                        RULE: normalmethodInvocationExpr
                        RULE: normalmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 2 result nodes
                            Query expr with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: bean . setContenido ( "" )
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 20: [bean . setContenido ( "" ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 

                              (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 1 result nodes - CONTENT : ["" ]
                                  Query unexp with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                                  Query pri with 1 result nodes - CONTENT in line 20: [bean . setContenido ( "" ) ]
                                  Query child with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                    RULE: stringLiteralExpr
                                    RULE: stringLiteralExpr... executing!
                                      Model Element JavaSimplified::Literal created
                                      Executing queries...
                                        Query expr with 1 result nodes - CONTENT : ["" ]
                                        Query strl with 1 result nodes - CONTENT in line 20: ["" ]
                                      Executing mappings...
                                        - VALUE: type (property) - STRING (value)
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "" (value) 
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "" (value) 

                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - setContenido (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - setContenido (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                              (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method


                  (5/7) result node: blockStatement (kind). Rule... calling expressionStatement rule

                  RULE: expressionStatement
                  RULE: expressionStatement... executing!
                    Model Element JavaSimplified::ExpressionStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ; ]
                      Query e with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                    Executing mappings...
                      - CODE:  - node: expression (kind) - Result: bean . setAutor ( "" )
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                        RULE: normalmethodInvocationExpr
                        RULE: normalmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 2 result nodes
                            Query expr with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: bean . setAutor ( "" )
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 21: [bean . setAutor ( "" ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 

                              (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 1 result nodes - CONTENT : ["" ]
                                  Query unexp with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                                  Query pri with 1 result nodes - CONTENT in line 21: [bean . setAutor ( "" ) ]
                                  Query child with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                    RULE: stringLiteralExpr
                                    RULE: stringLiteralExpr... executing!
                                      Model Element JavaSimplified::Literal created
                                      Executing queries...
                                        Query expr with 1 result nodes - CONTENT : ["" ]
                                        Query strl with 1 result nodes - CONTENT in line 21: ["" ]
                                      Executing mappings...
                                        - VALUE: type (property) - STRING (value)
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "" (value) 
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "" (value) 

                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - setAutor (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - setAutor (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                              (2/2) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method


                  (6/7) result node: blockStatement (kind). Rule... calling expressionStatement rule

                  RULE: expressionStatement
                  RULE: expressionStatement... executing!
                    Model Element JavaSimplified::ExpressionStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ; ]
                      Query e with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                    Executing mappings...
                      - CODE:  - node: expression (kind) - Result: request . setAttribute ( "noticia" , noticia )
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                        RULE: normalmethodInvocationExpr
                        RULE: normalmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 3 result nodes
                            Query expr with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: request . setAttribute ( "noticia" , noticia )
                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 23: [request . setAttribute ( "noticia" , noticia ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 

                              (2/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                              (3/3) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 23: [noticia ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - noticia (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - noticia (value) 

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 2 result nodes
                                  Query unexp with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                                  Query pri with 1 result nodes - CONTENT in line 23: [request . setAttribute ( "noticia" , noticia ) ]
                                  Query child with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                    RULE: stringLiteralExpr
                                    RULE: stringLiteralExpr... executing!
                                      Model Element JavaSimplified::Literal created
                                      Executing queries...
                                        Query expr with 1 result nodes - CONTENT : ["noticia" ]
                                        Query strl with 1 result nodes - CONTENT in line 23: ["noticia" ]
                                      Executing mappings...
                                        - VALUE: type (property) - STRING (value)
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "noticia" (value) 
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "noticia" (value) 

                                    (2/2) result node: expression (kind). Rule... calling nameExpr rule

                                    RULE: nameExpr
                                    RULE: nameExpr... executing!
                                      Model Element JavaSimplified::Name created
                                      Executing queries...
                                        Query pri with 1 result nodes - CONTENT in line 23: [noticia ]
                                        Query expr with 1 result nodes - CONTENT : [noticia ]
                                      Executing mappings...
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - noticia (value) 
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - noticia (value) 

                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - setAttribute (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - setAttribute (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                              (2/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method
                              (3/3) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method


                  (7/7) result node: blockStatement (kind). Rule... calling returnStatement rule

                  RULE: returnStatement
                  RULE: returnStatement... executing!
                    Model Element JavaSimplified::ReturnStatement created
                    Executing queries...
                      Query retExp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                      Query bst with 1 result nodes - CONTENT : [return ( actionMapping . findForward ( "verNoticia" ) ) ; ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling parenmethodInvocationExpr rule

                        RULE: parenmethodInvocationExpr
                        RULE: parenmethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 1 result nodes - CONTENT in line 24: [actionMapping . findForward ( "verNoticia" ) ]
                            Query expr with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: ( actionMapping . findForward ( "verNoticia" ) )
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: primary (kind). Rule... calling auxName rule

                              RULE: auxName
                              RULE: auxName... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query p with 1 result nodes - CONTENT in line 24: [actionMapping . findForward ( "verNoticia" ) ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 
                                  - QUERY_ACCESS: variable: p - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: primary (kind). Rule... calling methodCall rule

                              RULE: methodCall
                              RULE: methodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 1 result nodes - CONTENT : ["verNoticia" ]
                                  Query unexp with 0 result nodes
                                  Query pri with 1 result nodes - CONTENT in line 24: [actionMapping . findForward ( "verNoticia" ) ]
                                  Query child with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                    RULE: stringLiteralExpr
                                    RULE: stringLiteralExpr... executing!
                                      Model Element JavaSimplified::Literal created
                                      Executing queries...
                                        Query expr with 1 result nodes - CONTENT : ["verNoticia" ]
                                        Query strl with 1 result nodes - CONTENT in line 24: ["verNoticia" ]
                                      Executing mappings...
                                        - VALUE: type (property) - STRING (value)
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "verNoticia" (value) 
                                        - QUERY_ACCESS: variable: strl - 
                                          node: literal (kind) - leaf: StringLiteral (kind) - "verNoticia" (value) 

                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST





      (4/4) result node: typeDeclaration (kind). Rule... calling javaClass rule

      RULE: javaClass
      RULE: javaClass... executing!
        Model Element JavaSimplified::JavaClass created
        Executing queries...
          Query td with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
          Query classDecl with 1 result nodes - CONTENT in line 6: [class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
          Query fieldDecl with 4 result nodes
          Query mycompUnit with 1 result nodes - CONTENT : [package beansstruts ; import javax . servlet . http . HttpServletRequest ; import org . apache . struts . action . * ; public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
          Query methDecl with 14 result nodes
          Query imp with 2 result nodes
        Executing mappings...
          - CODE:  - node: importDeclaration (kind) - Result: import javax . servlet . http . HttpServletRequest ; - node: importDeclaration (kind) - Result: import org . apache . struts . action . * ;
          - OPERATION_CREATION: JavaSimplified::Name created
          - QUERY_ACCESS: variable: classDecl - 
            node: normalClassDeclaration (kind) - leaf: Identifier (kind) - BeanTablon (value) 
          - QUERY_ACCESS: variable: classDecl - 
            node: normalClassDeclaration (kind) - leaf: Identifier (kind) - BeanTablon (value) 
          - QUERY_RESULT: 4 bindings:
            (1/4) result node: classBodyDeclaration (kind). Rule... calling field rule

            RULE: field
            RULE: field... executing!
              Model Element JavaSimplified::Field created
              Executing queries...
                Query varType with 1 result nodes - CONTENT in line 8: [String ]
                Query cbd with 1 result nodes - CONTENT : [private String tituloSeleccionado = "" ; ]
                Query varMod with 1 result nodes - CONTENT in line 8: [private ]
                Query varDecl with 1 result nodes - CONTENT in line 8: [tituloSeleccionado = "" ]
              Executing mappings...
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: varDecl - 
                  node: variableDeclarator (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                - QUERY_ACCESS: variable: varDecl - 
                  node: variableDeclarator (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                - HASH: visibilityTypeMap (hash) - private (key) - PRIVATE (value)
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - CODE:  - node: classBodyDeclaration (kind) - Result: private String tituloSeleccionado = "" ;

            (2/4) result node: classBodyDeclaration (kind). Rule... calling field rule

            RULE: field
            RULE: field... executing!
              Model Element JavaSimplified::Field created
              Executing queries...
                Query varType with 1 result nodes - CONTENT in line 10: [String ]
                Query cbd with 1 result nodes - CONTENT : [private String titulo = "" ; ]
                Query varMod with 1 result nodes - CONTENT in line 10: [private ]
                Query varDecl with 1 result nodes - CONTENT in line 10: [titulo = "" ]
              Executing mappings...
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: varDecl - 
                  node: variableDeclarator (kind) - leaf: Identifier (kind) - titulo (value) 
                - QUERY_ACCESS: variable: varDecl - 
                  node: variableDeclarator (kind) - leaf: Identifier (kind) - titulo (value) 
                - HASH: visibilityTypeMap (hash) - private (key) - PRIVATE (value)
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - CODE:  - node: classBodyDeclaration (kind) - Result: private String titulo = "" ;

            (3/4) result node: classBodyDeclaration (kind). Rule... calling field rule

            RULE: field
            RULE: field... executing!
              Model Element JavaSimplified::Field created
              Executing queries...
                Query varType with 1 result nodes - CONTENT in line 11: [String ]
                Query cbd with 1 result nodes - CONTENT : [private String contenido = "" ; ]
                Query varMod with 1 result nodes - CONTENT in line 11: [private ]
                Query varDecl with 1 result nodes - CONTENT in line 11: [contenido = "" ]
              Executing mappings...
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: varDecl - 
                  node: variableDeclarator (kind) - leaf: Identifier (kind) - contenido (value) 
                - QUERY_ACCESS: variable: varDecl - 
                  node: variableDeclarator (kind) - leaf: Identifier (kind) - contenido (value) 
                - HASH: visibilityTypeMap (hash) - private (key) - PRIVATE (value)
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - CODE:  - node: classBodyDeclaration (kind) - Result: private String contenido = "" ;

            (4/4) result node: classBodyDeclaration (kind). Rule... calling field rule

            RULE: field
            RULE: field... executing!
              Model Element JavaSimplified::Field created
              Executing queries...
                Query varType with 1 result nodes - CONTENT in line 12: [String ]
                Query cbd with 1 result nodes - CONTENT : [private String autor = "" ; ]
                Query varMod with 1 result nodes - CONTENT in line 12: [private ]
                Query varDecl with 1 result nodes - CONTENT in line 12: [autor = "" ]
              Executing mappings...
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: varDecl - 
                  node: variableDeclarator (kind) - leaf: Identifier (kind) - autor (value) 
                - QUERY_ACCESS: variable: varDecl - 
                  node: variableDeclarator (kind) - leaf: Identifier (kind) - autor (value) 
                - HASH: visibilityTypeMap (hash) - private (key) - PRIVATE (value)
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - CODE:  - node: classBodyDeclaration (kind) - Result: private String autor = "" ;

          - QUERY_RESULT: 14 bindings:
            (1/14) result node: classBodyDeclaration (kind). Rule... RULE NOT FOUND!  FROM: classBodyDeclaration TO: methods
            (2/14) result node: classBodyDeclaration (kind). Rule... RULE NOT FOUND!  FROM: classBodyDeclaration TO: methods
            (3/14) result node: classBodyDeclaration (kind). Rule... RULE NOT FOUND!  FROM: classBodyDeclaration TO: methods
            (4/14) result node: classBodyDeclaration (kind). Rule... RULE NOT FOUND!  FROM: classBodyDeclaration TO: methods
            (5/14) result node: classBodyDeclaration (kind). Rule... calling typedMethod rule

            RULE: typedMethod
            RULE: typedMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 15: [ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } ]
                Query methParam with 2 result nodes
                Query methStat with 3 result nodes
                Query methType with 1 result nodes - CONTENT in line 15: [ActionErrors ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - validate (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - validate (value) 
                - QUERY_RESULT: 2 bindings:
                  (1/2) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 15: [ActionMapping ]
                      Query paramDecl with 1 result nodes - CONTENT in line 15: [mapping ]
                      Query fpd with 1 result nodes - CONTENT : [ActionMapping mapping , HttpServletRequest request ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - mapping (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - mapping (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                  (2/2) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 15: [HttpServletRequest ]
                      Query paramDecl with 1 result nodes - CONTENT in line 15: [request ]
                      Query fpd with 1 result nodes - CONTENT : [HttpServletRequest request ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - QUERY_RESULT: 3 bindings:
                  (1/3) result node: blockStatement (kind). Rule... calling variableDeclarationStatement rule

                  RULE: variableDeclarationStatement
                  RULE: variableDeclarationStatement... executing!
                    Model Element JavaSimplified::VariableDeclarationStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [ActionErrors errores = new ActionErrors ( ) ; ]
                      Query t with 1 result nodes - CONTENT in line 16: [ActionErrors ]
                      Query e with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                      Query lvd with 1 result nodes - CONTENT in line 16: [ActionErrors errores = new ActionErrors ( ) ; ]
                      Query vd with 1 result nodes - CONTENT in line 16: [errores = new ActionErrors ( ) ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: ActionErrors errores = new ActionErrors ( ) ;
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - errores (value) 
                      - QUERY_ACCESS: variable: vd - 
                        node: variableDeclarator (kind) - leaf: Identifier (kind) - errores (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling classInstanceCreationExpr rule

                        RULE: classInstanceCreationExpr
                        RULE: classInstanceCreationExpr... executing!
                          Model Element JavaSimplified::ClassInstanceCreation created
                          Executing queries...
                            Query arg with 0 result nodes
                            Query expr with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                            Query crn with 0 result nodes
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: new ActionErrors ( )
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                  (2/3) result node: blockStatement (kind). Rule... calling ifStatement rule

                  RULE: ifStatement
                  RULE: ifStatement... executing!
                    Model Element JavaSimplified::IfStatement created
                    Executing queries...
                      Query st with 1 result nodes - CONTENT in line 17: [if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; ]
                      Query bst with 1 result nodes - CONTENT : [if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; ]
                      Query e with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ;
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling thismethodInvocationExpr rule

                        RULE: thismethodInvocationExpr
                        RULE: thismethodInvocationExpr... executing!
                          Model Element JavaSimplified::MethodInvocation created
                          Executing queries...
                            Query pri with 1 result nodes - CONTENT in line 17: [isTituloNoValido ( getTitulo ( ) ) ]
                            Query expr with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: isTituloNoValido ( getTitulo ( ) )
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: primary (kind). Rule... calling thismethodCall rule

                              RULE: thismethodCall
                              RULE: thismethodCall... executing!
                                Model Element JavaSimplified::MethodCall created
                                Executing queries...
                                  Query args with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                  Query pri with 1 result nodes - CONTENT in line 17: [isTituloNoValido ( getTitulo ( ) ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling thismethodInvocationExpr rule

                                    RULE: thismethodInvocationExpr
                                    RULE: thismethodInvocationExpr... executing!
                                      Model Element JavaSimplified::MethodInvocation created
                                      Executing queries...
                                        Query pri with 1 result nodes - CONTENT in line 17: [getTitulo ( ) ]
                                        Query expr with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                      Executing mappings...
                                        - CODE:  - node: expression (kind) - Result: getTitulo ( )
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: primary (kind). Rule... calling thismethodCall rule

                                          RULE: thismethodCall
                                          RULE: thismethodCall... executing!
                                            Model Element JavaSimplified::MethodCall created
                                            Executing queries...
                                              Query args with 0 result nodes
                                              Query pri with 1 result nodes - CONTENT in line 17: [getTitulo ( ) ]
                                            Executing mappings...
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                              - OPERATION_CREATION: JavaSimplified::Name created
                                              - QUERY_ACCESS: variable: pri - 
                                                node: primary (kind) - leaf: Identifier (kind) - getTitulo (value) 
                                              - QUERY_ACCESS: variable: pri - 
                                                node: primary (kind) - leaf: Identifier (kind) - getTitulo (value) 


                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - isTituloNoValido (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - isTituloNoValido (value) 


                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: blockStatement (kind). Rule... calling expressionStatement rule

                        RULE: expressionStatement
                        RULE: expressionStatement... executing!
                          Model Element JavaSimplified::ExpressionStatement created
                          Executing queries...
                            Query bst with 1 result nodes - CONTENT in line 17: [if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; ]
                            Query e with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                          Executing mappings...
                            - CODE:  - node: expression (kind) - Result: errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) )
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling normalmethodInvocationExpr rule

                              RULE: normalmethodInvocationExpr
                              RULE: normalmethodInvocationExpr... executing!
                                Model Element JavaSimplified::MethodInvocation created
                                Executing queries...
                                  Query pri with 4 result nodes
                                  Query expr with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                Executing mappings...
                                  - CODE:  - node: expression (kind) - Result: errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) )
                                  - QUERY_RESULT: 4 bindings:
                                    (1/4) result node: primary (kind). Rule... calling auxName rule

                                    RULE: auxName
                                    RULE: auxName... executing!
                                      Model Element JavaSimplified::Name created
                                      Executing queries...
                                        Query p with 1 result nodes - CONTENT in line 18: [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                      Executing mappings...
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - errores (value) 
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - errores (value) 

                                    (2/4) result node: primary (kind). Rule... calling auxName rule

                                    RULE: auxName
                                    RULE: auxName... executing!
                                      Model Element JavaSimplified::Name created
                                      Executing queries...
                                        Query p with 1 result nodes - CONTENT in line 18: [ActionErrors . GLOBAL_ERROR ]
                                      Executing mappings...
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - ActionErrors (value) 
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - ActionErrors (value) 

                                    (3/4) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                                    (4/4) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: object
                                  - QUERY_RESULT: 4 bindings:
                                    (1/4) result node: primary (kind). Rule... calling methodCall rule

                                    RULE: methodCall
                                    RULE: methodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 2 result nodes
                                        Query unexp with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                        Query pri with 1 result nodes - CONTENT in line 18: [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                        Query child with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: expression (kind). Rule... calling constantExpr rule

                                          RULE: constantExpr
                                          RULE: constantExpr... executing!
                                            Model Element JavaSimplified::Name created
                                            Executing queries...
                                              Query expr with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                            Executing mappings...
                                              - CODE:  - node: expression (kind) - Result: ActionErrors . GLOBAL_ERROR
                                              - CODE:  - node: expression (kind) - Result: ActionErrors . GLOBAL_ERROR

                                          (2/2) result node: expression (kind). Rule... calling classInstanceCreationExpr rule

                                          RULE: classInstanceCreationExpr
                                          RULE: classInstanceCreationExpr... executing!
                                            Model Element JavaSimplified::ClassInstanceCreation created
                                            Executing queries...
                                              Query arg with 1 result nodes - CONTENT : ["tablon.error" ]
                                              Query expr with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                              Query crn with 0 result nodes
                                            Executing mappings...
                                              - CODE:  - node: expression (kind) - Result: new ActionError ( "tablon.error" )
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                                RULE: stringLiteralExpr
                                                RULE: stringLiteralExpr... executing!
                                                  Model Element JavaSimplified::Literal created
                                                  Executing queries...
                                                    Query expr with 1 result nodes - CONTENT : ["tablon.error" ]
                                                    Query strl with 1 result nodes - CONTENT in line 18: ["tablon.error" ]
                                                  Executing mappings...
                                                    - VALUE: type (property) - STRING (value)
                                                    - QUERY_ACCESS: variable: strl - 
                                                      node: literal (kind) - leaf: StringLiteral (kind) - "tablon.error" (value) 
                                                    - QUERY_ACCESS: variable: strl - 
                                                      node: literal (kind) - leaf: StringLiteral (kind) - "tablon.error" (value) 


                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - add (value) 
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - add (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                    (2/4) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method
                                    (3/4) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method
                                    (4/4) result node: primary (kind). Rule... RULE NOT FOUND!  FROM: primary TO: method



                  (3/3) result node: blockStatement (kind). Rule... calling returnStatement rule

                  RULE: returnStatement
                  RULE: returnStatement... executing!
                    Model Element JavaSimplified::ReturnStatement created
                    Executing queries...
                      Query retExp with 1 result nodes - CONTENT : [errores ]
                      Query bst with 1 result nodes - CONTENT : [return errores ; ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling nameExpr rule

                        RULE: nameExpr
                        RULE: nameExpr... executing!
                          Model Element JavaSimplified::Name created
                          Executing queries...
                            Query pri with 1 result nodes - CONTENT in line 19: [errores ]
                            Query expr with 1 result nodes - CONTENT : [errores ]
                          Executing mappings...
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - errores (value) 
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - errores (value) 



            (6/14) result node: classBodyDeclaration (kind). Rule... calling typedMethod rule

            RULE: typedMethod
            RULE: typedMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 22: [boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } ]
                Query methParam with 1 result nodes - CONTENT : [String t ]
                Query methStat with 2 result nodes
                Query methType with 1 result nodes - CONTENT : [boolean ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - isTituloNoValido (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - isTituloNoValido (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 22: [String ]
                      Query paramDecl with 1 result nodes - CONTENT in line 22: [t ]
                      Query fpd with 1 result nodes - CONTENT : [String t ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - t (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - t (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling primitiveType rule

                  RULE: primitiveType
                  RULE: primitiveType... cached!!
                - QUERY_RESULT: 2 bindings:
                  (1/2) result node: blockStatement (kind). Rule... calling ifStatement rule

                  RULE: ifStatement
                  RULE: ifStatement... executing!
                    Model Element JavaSimplified::IfStatement created
                    Executing queries...
                      Query st with 1 result nodes - CONTENT in line 23: [if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; ]
                      Query bst with 1 result nodes - CONTENT : [if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; ]
                      Query e with 1 result nodes - CONTENT : [t . contains ( "$" ) || t . contains ( "#" ) ]
                    Executing mappings...
                      - CODE:  - node: blockStatement (kind) - Result: if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ;
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling orExpression rule

                        RULE: orExpression
                        RULE: orExpression... executing!
                          Model Element JavaSimplified::InfixExpression created
                          Executing queries...
                            Query ex with 1 result nodes - CONTENT : [t . contains ( "$" ) || t . contains ( "#" ) ]
                            Query e1 with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                            Query e2 with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                          Executing mappings...
                            - VALUE: operator (property) - CONDITIONAL_OR (value)
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: conditionalAndExpression (kind). Rule... calling normalmethodInvocationExprSpecial rule

                              RULE: normalmethodInvocationExprSpecial
                              RULE: normalmethodInvocationExprSpecial... executing!
                                Model Element JavaSimplified::MethodInvocation created
                                Executing queries...
                                  Query ce with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                  Query pri with 1 result nodes - CONTENT in line 23: [t . contains ( "$" ) ]
                                Executing mappings...
                                  - CODE:  - node: conditionalAndExpression (kind) - Result: t . contains ( "$" )
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: primary (kind). Rule... calling auxName rule

                                    RULE: auxName
                                    RULE: auxName... executing!
                                      Model Element JavaSimplified::Name created
                                      Executing queries...
                                        Query p with 1 result nodes - CONTENT in line 23: [t . contains ( "$" ) ]
                                      Executing mappings...
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - t (value) 
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - t (value) 

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: primary (kind). Rule... calling methodCall rule

                                    RULE: methodCall
                                    RULE: methodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 1 result nodes - CONTENT : ["$" ]
                                        Query unexp with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                        Query pri with 1 result nodes - CONTENT in line 23: [t . contains ( "$" ) ]
                                        Query child with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                          RULE: stringLiteralExpr
                                          RULE: stringLiteralExpr... executing!
                                            Model Element JavaSimplified::Literal created
                                            Executing queries...
                                              Query expr with 1 result nodes - CONTENT : ["$" ]
                                              Query strl with 1 result nodes - CONTENT in line 23: ["$" ]
                                            Executing mappings...
                                              - VALUE: type (property) - STRING (value)
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "$" (value) 
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "$" (value) 

                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - contains (value) 
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - contains (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: conditionalAndExpression (kind). Rule... calling normalmethodInvocationExprSpecial rule

                              RULE: normalmethodInvocationExprSpecial
                              RULE: normalmethodInvocationExprSpecial... executing!
                                Model Element JavaSimplified::MethodInvocation created
                                Executing queries...
                                  Query ce with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                  Query pri with 1 result nodes - CONTENT in line 23: [t . contains ( "#" ) ]
                                Executing mappings...
                                  - CODE:  - node: conditionalAndExpression (kind) - Result: t . contains ( "#" )
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: primary (kind). Rule... calling auxName rule

                                    RULE: auxName
                                    RULE: auxName... executing!
                                      Model Element JavaSimplified::Name created
                                      Executing queries...
                                        Query p with 1 result nodes - CONTENT in line 23: [t . contains ( "#" ) ]
                                      Executing mappings...
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - t (value) 
                                        - QUERY_ACCESS: variable: p - 
                                          node: primary (kind) - leaf: Identifier (kind) - t (value) 

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: primary (kind). Rule... calling methodCall rule

                                    RULE: methodCall
                                    RULE: methodCall... executing!
                                      Model Element JavaSimplified::MethodCall created
                                      Executing queries...
                                        Query args with 1 result nodes - CONTENT : ["#" ]
                                        Query unexp with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                        Query pri with 1 result nodes - CONTENT in line 23: [t . contains ( "#" ) ]
                                        Query child with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling stringLiteralExpr rule

                                          RULE: stringLiteralExpr
                                          RULE: stringLiteralExpr... executing!
                                            Model Element JavaSimplified::Literal created
                                            Executing queries...
                                              Query expr with 1 result nodes - CONTENT : ["#" ]
                                              Query strl with 1 result nodes - CONTENT in line 23: ["#" ]
                                            Executing mappings...
                                              - VALUE: type (property) - STRING (value)
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "#" (value) 
                                              - QUERY_ACCESS: variable: strl - 
                                                node: literal (kind) - leaf: StringLiteral (kind) - "#" (value) 

                                        - OPERATION_CREATION: JavaSimplified::Name created
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - contains (value) 
                                        - QUERY_ACCESS: variable: pri - 
                                          node: primary (kind) - leaf: Identifier (kind) - contains (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: blockStatement (kind). Rule... calling returnStatement rule

                        RULE: returnStatement
                        RULE: returnStatement... executing!
                          Model Element JavaSimplified::ReturnStatement created
                          Executing queries...
                            Query retExp with 1 result nodes - CONTENT : [true ]
                            Query bst with 1 result nodes - CONTENT in line 23: [if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling booleanLiteralExpr rule

                              RULE: booleanLiteralExpr
                              RULE: booleanLiteralExpr... executing!
                                Model Element JavaSimplified::Literal created
                                Executing queries...
                                  Query bool with 1 result nodes - CONTENT in line 23: [true ]
                                  Query expr with 1 result nodes - CONTENT : [true ]
                                Executing mappings...
                                  - VALUE: type (property) - BOOLEAN (value)
                                  - QUERY_ACCESS: variable: bool - 
                                    node: booleanLiteral (kind) - leaf: TOKEN (kind) - true (value) 
                                  - QUERY_ACCESS: variable: bool - 
                                    node: booleanLiteral (kind) - leaf: TOKEN (kind) - true (value) 



                  (2/2) result node: blockStatement (kind). Rule... calling returnStatement rule

                  RULE: returnStatement
                  RULE: returnStatement... executing!
                    Model Element JavaSimplified::ReturnStatement created
                    Executing queries...
                      Query retExp with 1 result nodes - CONTENT : [false ]
                      Query bst with 1 result nodes - CONTENT : [return false ; ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling booleanLiteralExpr rule

                        RULE: booleanLiteralExpr
                        RULE: booleanLiteralExpr... executing!
                          Model Element JavaSimplified::Literal created
                          Executing queries...
                            Query bool with 1 result nodes - CONTENT in line 24: [false ]
                            Query expr with 1 result nodes - CONTENT : [false ]
                          Executing mappings...
                            - VALUE: type (property) - BOOLEAN (value)
                            - QUERY_ACCESS: variable: bool - 
                              node: booleanLiteral (kind) - leaf: TOKEN (kind) - false (value) 
                            - QUERY_ACCESS: variable: bool - 
                              node: booleanLiteral (kind) - leaf: TOKEN (kind) - false (value) 



            (7/14) result node: classBodyDeclaration (kind). Rule... calling voidMethod rule

            RULE: voidMethod
            RULE: voidMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 29: [void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } ]
                Query methParam with 1 result nodes - CONTENT : [String tituloSeleccionado ]
                Query methStat with 1 result nodes - CONTENT : [this . tituloSeleccionado = tituloSeleccionado ; ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: memberDecl (kind) - leaf: Identifier (kind) - setTituloSeleccionado (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: memberDecl (kind) - leaf: Identifier (kind) - setTituloSeleccionado (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 29: [String ]
                      Query paramDecl with 1 result nodes - CONTENT in line 29: [tituloSeleccionado ]
                      Query fpd with 1 result nodes - CONTENT : [String tituloSeleccionado ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: blockStatement (kind). Rule... calling expressionStatement rule

                  RULE: expressionStatement
                  RULE: expressionStatement... executing!
                    Model Element JavaSimplified::ExpressionStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [this . tituloSeleccionado = tituloSeleccionado ; ]
                      Query e with 1 result nodes - CONTENT : [this . tituloSeleccionado = tituloSeleccionado ]
                    Executing mappings...
                      - CODE:  - node: expression (kind) - Result: this . tituloSeleccionado = tituloSeleccionado
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling assignmentExpr rule

                        RULE: assignmentExpr
                        RULE: assignmentExpr... executing!
                          Model Element JavaSimplified::Assignment created
                          Executing queries...
                            Query op with 1 result nodes - CONTENT in line 30: [= ]
                            Query expr with 1 result nodes - CONTENT : [this . tituloSeleccionado = tituloSeleccionado ]
                            Query e1 with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                            Query e2 with 1 result nodes - CONTENT : [tituloSeleccionado ]
                          Executing mappings...
                            - HASH: assignmentOperatorTypeMap (hash) - = (key) - ASSIGN (value)
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: conditionalExpression (kind). Rule... calling leftThisExpr rule

                              RULE: leftThisExpr
                              RULE: leftThisExpr... executing!
                                Model Element JavaSimplified::FieldAccess created
                                Executing queries...
                                  Query pri with 1 result nodes - CONTENT in line 30: [this . tituloSeleccionado ]
                                  Query expr with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                Executing mappings...
                                  - OPERATION_CREATION: JavaSimplified::ThisExpression created
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling nameExpr rule

                              RULE: nameExpr
                              RULE: nameExpr... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query pri with 1 result nodes - CONTENT in line 30: [tituloSeleccionado ]
                                  Query expr with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 




            (8/14) result node: classBodyDeclaration (kind). Rule... calling typedMethod rule

            RULE: typedMethod
            RULE: typedMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 33: [String getTituloSeleccionado ( ) { return tituloSeleccionado ; } ]
                Query methParam with 0 result nodes
                Query methStat with 1 result nodes - CONTENT : [return tituloSeleccionado ; ]
                Query methType with 1 result nodes - CONTENT in line 33: [String ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public String getTituloSeleccionado ( ) { return tituloSeleccionado ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - getTituloSeleccionado (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - getTituloSeleccionado (value) 
                - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: blockStatement (kind). Rule... calling returnStatement rule

                  RULE: returnStatement
                  RULE: returnStatement... executing!
                    Model Element JavaSimplified::ReturnStatement created
                    Executing queries...
                      Query retExp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                      Query bst with 1 result nodes - CONTENT : [return tituloSeleccionado ; ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling nameExpr rule

                        RULE: nameExpr
                        RULE: nameExpr... executing!
                          Model Element JavaSimplified::Name created
                          Executing queries...
                            Query pri with 1 result nodes - CONTENT in line 34: [tituloSeleccionado ]
                            Query expr with 1 result nodes - CONTENT : [tituloSeleccionado ]
                          Executing mappings...
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 



            (9/14) result node: classBodyDeclaration (kind). Rule... calling voidMethod rule

            RULE: voidMethod
            RULE: voidMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public void setTitulo ( String titulo ) { this . titulo = titulo ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 37: [void setTitulo ( String titulo ) { this . titulo = titulo ; } ]
                Query methParam with 1 result nodes - CONTENT : [String titulo ]
                Query methStat with 1 result nodes - CONTENT : [this . titulo = titulo ; ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public void setTitulo ( String titulo ) { this . titulo = titulo ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: memberDecl (kind) - leaf: Identifier (kind) - setTitulo (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: memberDecl (kind) - leaf: Identifier (kind) - setTitulo (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 37: [String ]
                      Query paramDecl with 1 result nodes - CONTENT in line 37: [titulo ]
                      Query fpd with 1 result nodes - CONTENT : [String titulo ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - titulo (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - titulo (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: blockStatement (kind). Rule... calling expressionStatement rule

                  RULE: expressionStatement
                  RULE: expressionStatement... executing!
                    Model Element JavaSimplified::ExpressionStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [this . titulo = titulo ; ]
                      Query e with 1 result nodes - CONTENT : [this . titulo = titulo ]
                    Executing mappings...
                      - CODE:  - node: expression (kind) - Result: this . titulo = titulo
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling assignmentExpr rule

                        RULE: assignmentExpr
                        RULE: assignmentExpr... executing!
                          Model Element JavaSimplified::Assignment created
                          Executing queries...
                            Query op with 1 result nodes - CONTENT in line 38: [= ]
                            Query expr with 1 result nodes - CONTENT : [this . titulo = titulo ]
                            Query e1 with 1 result nodes - CONTENT : [this . titulo ]
                            Query e2 with 1 result nodes - CONTENT : [titulo ]
                          Executing mappings...
                            - HASH: assignmentOperatorTypeMap (hash) - = (key) - ASSIGN (value)
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: conditionalExpression (kind). Rule... calling leftThisExpr rule

                              RULE: leftThisExpr
                              RULE: leftThisExpr... executing!
                                Model Element JavaSimplified::FieldAccess created
                                Executing queries...
                                  Query pri with 1 result nodes - CONTENT in line 38: [this . titulo ]
                                  Query expr with 1 result nodes - CONTENT : [this . titulo ]
                                Executing mappings...
                                  - OPERATION_CREATION: JavaSimplified::ThisExpression created
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - titulo (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - titulo (value) 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling nameExpr rule

                              RULE: nameExpr
                              RULE: nameExpr... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query pri with 1 result nodes - CONTENT in line 38: [titulo ]
                                  Query expr with 1 result nodes - CONTENT : [titulo ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - titulo (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - titulo (value) 




            (10/14) result node: classBodyDeclaration (kind). Rule... calling typedMethod rule

            RULE: typedMethod
            RULE: typedMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public String getTitulo ( ) { return titulo ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 41: [String getTitulo ( ) { return titulo ; } ]
                Query methParam with 0 result nodes
                Query methStat with 1 result nodes - CONTENT : [return titulo ; ]
                Query methType with 1 result nodes - CONTENT in line 41: [String ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public String getTitulo ( ) { return titulo ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - getTitulo (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - getTitulo (value) 
                - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: blockStatement (kind). Rule... calling returnStatement rule

                  RULE: returnStatement
                  RULE: returnStatement... executing!
                    Model Element JavaSimplified::ReturnStatement created
                    Executing queries...
                      Query retExp with 1 result nodes - CONTENT : [titulo ]
                      Query bst with 1 result nodes - CONTENT : [return titulo ; ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling nameExpr rule

                        RULE: nameExpr
                        RULE: nameExpr... executing!
                          Model Element JavaSimplified::Name created
                          Executing queries...
                            Query pri with 1 result nodes - CONTENT in line 42: [titulo ]
                            Query expr with 1 result nodes - CONTENT : [titulo ]
                          Executing mappings...
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - titulo (value) 
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - titulo (value) 



            (11/14) result node: classBodyDeclaration (kind). Rule... calling voidMethod rule

            RULE: voidMethod
            RULE: voidMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public void setContenido ( String contenido ) { this . contenido = contenido ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 45: [void setContenido ( String contenido ) { this . contenido = contenido ; } ]
                Query methParam with 1 result nodes - CONTENT : [String contenido ]
                Query methStat with 1 result nodes - CONTENT : [this . contenido = contenido ; ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public void setContenido ( String contenido ) { this . contenido = contenido ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: memberDecl (kind) - leaf: Identifier (kind) - setContenido (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: memberDecl (kind) - leaf: Identifier (kind) - setContenido (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 45: [String ]
                      Query paramDecl with 1 result nodes - CONTENT in line 45: [contenido ]
                      Query fpd with 1 result nodes - CONTENT : [String contenido ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - contenido (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - contenido (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: blockStatement (kind). Rule... calling expressionStatement rule

                  RULE: expressionStatement
                  RULE: expressionStatement... executing!
                    Model Element JavaSimplified::ExpressionStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [this . contenido = contenido ; ]
                      Query e with 1 result nodes - CONTENT : [this . contenido = contenido ]
                    Executing mappings...
                      - CODE:  - node: expression (kind) - Result: this . contenido = contenido
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling assignmentExpr rule

                        RULE: assignmentExpr
                        RULE: assignmentExpr... executing!
                          Model Element JavaSimplified::Assignment created
                          Executing queries...
                            Query op with 1 result nodes - CONTENT in line 46: [= ]
                            Query expr with 1 result nodes - CONTENT : [this . contenido = contenido ]
                            Query e1 with 1 result nodes - CONTENT : [this . contenido ]
                            Query e2 with 1 result nodes - CONTENT : [contenido ]
                          Executing mappings...
                            - HASH: assignmentOperatorTypeMap (hash) - = (key) - ASSIGN (value)
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: conditionalExpression (kind). Rule... calling leftThisExpr rule

                              RULE: leftThisExpr
                              RULE: leftThisExpr... executing!
                                Model Element JavaSimplified::FieldAccess created
                                Executing queries...
                                  Query pri with 1 result nodes - CONTENT in line 46: [this . contenido ]
                                  Query expr with 1 result nodes - CONTENT : [this . contenido ]
                                Executing mappings...
                                  - OPERATION_CREATION: JavaSimplified::ThisExpression created
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - contenido (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - contenido (value) 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling nameExpr rule

                              RULE: nameExpr
                              RULE: nameExpr... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query pri with 1 result nodes - CONTENT in line 46: [contenido ]
                                  Query expr with 1 result nodes - CONTENT : [contenido ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - contenido (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - contenido (value) 




            (12/14) result node: classBodyDeclaration (kind). Rule... calling typedMethod rule

            RULE: typedMethod
            RULE: typedMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public String getContenido ( ) { return contenido ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 49: [String getContenido ( ) { return contenido ; } ]
                Query methParam with 0 result nodes
                Query methStat with 1 result nodes - CONTENT : [return contenido ; ]
                Query methType with 1 result nodes - CONTENT in line 49: [String ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public String getContenido ( ) { return contenido ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - getContenido (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - getContenido (value) 
                - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: blockStatement (kind). Rule... calling returnStatement rule

                  RULE: returnStatement
                  RULE: returnStatement... executing!
                    Model Element JavaSimplified::ReturnStatement created
                    Executing queries...
                      Query retExp with 1 result nodes - CONTENT : [contenido ]
                      Query bst with 1 result nodes - CONTENT : [return contenido ; ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling nameExpr rule

                        RULE: nameExpr
                        RULE: nameExpr... executing!
                          Model Element JavaSimplified::Name created
                          Executing queries...
                            Query pri with 1 result nodes - CONTENT in line 50: [contenido ]
                            Query expr with 1 result nodes - CONTENT : [contenido ]
                          Executing mappings...
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - contenido (value) 
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - contenido (value) 



            (13/14) result node: classBodyDeclaration (kind). Rule... calling voidMethod rule

            RULE: voidMethod
            RULE: voidMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public void setAutor ( String autor ) { this . autor = autor ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 53: [void setAutor ( String autor ) { this . autor = autor ; } ]
                Query methParam with 1 result nodes - CONTENT : [String autor ]
                Query methStat with 1 result nodes - CONTENT : [this . autor = autor ; ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public void setAutor ( String autor ) { this . autor = autor ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: memberDecl (kind) - leaf: Identifier (kind) - setAutor (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: memberDecl (kind) - leaf: Identifier (kind) - setAutor (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: formalParameterDecls (kind). Rule... calling parameter rule

                  RULE: parameter
                  RULE: parameter... executing!
                    Model Element JavaSimplified::Parameter created
                    Executing queries...
                      Query paramType with 1 result nodes - CONTENT in line 53: [String ]
                      Query paramDecl with 1 result nodes - CONTENT in line 53: [autor ]
                      Query fpd with 1 result nodes - CONTENT : [String autor ]
                    Executing mappings...
                      - OPERATION_CREATION: JavaSimplified::Name created
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - autor (value) 
                      - QUERY_ACCESS: variable: paramDecl - 
                        node: variableDeclaratorId (kind) - leaf: Identifier (kind) - autor (value) 
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                        RULE: complexType
                        RULE: complexType... cached!!

                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: blockStatement (kind). Rule... calling expressionStatement rule

                  RULE: expressionStatement
                  RULE: expressionStatement... executing!
                    Model Element JavaSimplified::ExpressionStatement created
                    Executing queries...
                      Query bst with 1 result nodes - CONTENT : [this . autor = autor ; ]
                      Query e with 1 result nodes - CONTENT : [this . autor = autor ]
                    Executing mappings...
                      - CODE:  - node: expression (kind) - Result: this . autor = autor
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling assignmentExpr rule

                        RULE: assignmentExpr
                        RULE: assignmentExpr... executing!
                          Model Element JavaSimplified::Assignment created
                          Executing queries...
                            Query op with 1 result nodes - CONTENT in line 54: [= ]
                            Query expr with 1 result nodes - CONTENT : [this . autor = autor ]
                            Query e1 with 1 result nodes - CONTENT : [this . autor ]
                            Query e2 with 1 result nodes - CONTENT : [autor ]
                          Executing mappings...
                            - HASH: assignmentOperatorTypeMap (hash) - = (key) - ASSIGN (value)
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: conditionalExpression (kind). Rule... calling leftThisExpr rule

                              RULE: leftThisExpr
                              RULE: leftThisExpr... executing!
                                Model Element JavaSimplified::FieldAccess created
                                Executing queries...
                                  Query pri with 1 result nodes - CONTENT in line 54: [this . autor ]
                                  Query expr with 1 result nodes - CONTENT : [this . autor ]
                                Executing mappings...
                                  - OPERATION_CREATION: JavaSimplified::ThisExpression created
                                  - OPERATION_CREATION: JavaSimplified::Name created
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - autor (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - autor (value) 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling nameExpr rule

                              RULE: nameExpr
                              RULE: nameExpr... executing!
                                Model Element JavaSimplified::Name created
                                Executing queries...
                                  Query pri with 1 result nodes - CONTENT in line 54: [autor ]
                                  Query expr with 1 result nodes - CONTENT : [autor ]
                                Executing mappings...
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - autor (value) 
                                  - QUERY_ACCESS: variable: pri - 
                                    node: primary (kind) - leaf: Identifier (kind) - autor (value) 




            (14/14) result node: classBodyDeclaration (kind). Rule... calling typedMethod rule

            RULE: typedMethod
            RULE: typedMethod... executing!
              Model Element JavaSimplified::Method created
              Executing queries...
                Query cbd with 1 result nodes - CONTENT : [public String getAutor ( ) { return autor ; } ]
                Query methDecl with 1 result nodes - CONTENT in line 57: [String getAutor ( ) { return autor ; } ]
                Query methParam with 0 result nodes
                Query methStat with 1 result nodes - CONTENT : [return autor ; ]
                Query methType with 1 result nodes - CONTENT in line 57: [String ]
              Executing mappings...
                - CODE:  - node: classBodyDeclaration (kind) - Result: public String getAutor ( ) { return autor ; }
                - OPERATION_CREATION: JavaSimplified::Name created
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - getAutor (value) 
                - QUERY_ACCESS: variable: methDecl - 
                  node: methodDeclaration (kind) - leaf: Identifier (kind) - getAutor (value) 
                - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: type (kind). Rule...  (unique detected - Node?)calling complexType rule

                  RULE: complexType
                  RULE: complexType... cached!!
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: blockStatement (kind). Rule... calling returnStatement rule

                  RULE: returnStatement
                  RULE: returnStatement... executing!
                    Model Element JavaSimplified::ReturnStatement created
                    Executing queries...
                      Query retExp with 1 result nodes - CONTENT : [autor ]
                      Query bst with 1 result nodes - CONTENT : [return autor ; ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expression (kind). Rule... calling nameExpr rule

                        RULE: nameExpr
                        RULE: nameExpr... executing!
                          Model Element JavaSimplified::Name created
                          Executing queries...
                            Query pri with 1 result nodes - CONTENT in line 58: [autor ]
                            Query expr with 1 result nodes - CONTENT : [autor ]
                          Executing mappings...
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - autor (value) 
                            - QUERY_ACCESS: variable: pri - 
                              node: primary (kind) - leaf: Identifier (kind) - autor (value) 






Saving...