<?xml version="1.0" encoding="ISO-8859-1"?>
<gastm:Project xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:gastm="http://modelum.es/modernization/gastm" xmlns:sastm="http://modelum.es/modernization/sastm">
  <files xsi:type="sastm:DelphiUnit" language="Delphi">
    <locationInfo>
      <inSourceFile pathName="D:\git\gra2mol\examples\org.gra2mol.example.delphi\.\examples\untClFormatos.pas"/>
    </locationInfo>
    <name nameString="untClFormatos"/>
    <interface>
      <fragments xsi:type="gastm:TypeDefinition">
        <name/>
      </fragments>
      <fragments xsi:type="gastm:TypeDefinition">
        <name/>
      </fragments>
    </interface>
    <implementation>
      <fragments xsi:type="gastm:FunctionDefinition">
        <identifierName nameString="TFecha.FechaSql"/>
        <body xsi:type="sastm:DelphiBlockStatement">
          <subStatements xsi:type="gastm:ExpressionStatement">
            <expression xsi:type="gastm:BinaryExpression">
              <operator xsi:type="gastm:Assign"/>
              <leftOperand xsi:type="gastm:IdentifierReference">
                <name nameString="result"/>
              </leftOperand>
            </expression>
          </subStatements>
        </body>
      </fragments>
      <fragments xsi:type="gastm:FunctionDefinition">
        <identifierName nameString="TFecha.FechaSql"/>
        <body xsi:type="sastm:DelphiBlockStatement">
          <subStatements xsi:type="gastm:ExpressionStatement">
            <expression xsi:type="gastm:BinaryExpression">
              <operator xsi:type="gastm:Assign"/>
              <leftOperand xsi:type="gastm:IdentifierReference">
                <name nameString="result"/>
              </leftOperand>
              <rightOperand xsi:type="sastm:DelphiFunctionCallExpression">
                <calledFunction xsi:type="gastm:IdentifierReference">
                  <name nameString="FechaSql"/>
                </calledFunction>
                <actualParams xsi:type="gastm:ActualParameterExpression">
                  <value xsi:type="sastm:DelphiFunctionCallExpression">
                    <calledFunction xsi:type="gastm:IdentifierReference">
                      <name nameString="DateToStr"/>
                    </calledFunction>
                    <actualParams xsi:type="gastm:ActualParameterExpression">
                      <value xsi:type="gastm:IdentifierReference">
                        <name nameString="fecha"/>
                      </value>
                    </actualParams>
                  </value>
                </actualParams>
              </rightOperand>
            </expression>
          </subStatements>
        </body>
      </fragments>
      <fragments xsi:type="gastm:FunctionDefinition">
        <identifierName nameString="TFecha.FechaEdtExit"/>
        <body xsi:type="sastm:DelphiBlockStatement">
          <subStatements xsi:type="gastm:ExpressionStatement">
            <expression xsi:type="gastm:FunctionCallExpression">
              <calledFunction xsi:type="gastm:IdentifierReference">
                <name nameString="Assert"/>
              </calledFunction>
              <actualParams xsi:type="gastm:ActualParameterExpression">
                <value xsi:type="gastm:BinaryExpression">
                  <leftOperand xsi:type="gastm:IdentifierReference">
                    <name nameString="ob"/>
                  </leftOperand>
                  <rightOperand xsi:type="gastm:IdentifierReference" refersTo="//@files.0/@implementation/@fragments.2/@body.0/@declarations.0">
                    <name nameString="TEdit"/>
                  </rightOperand>
                </value>
              </actualParams>
              <actualParams xsi:type="gastm:ActualParameterExpression">
                <value xsi:type="gastm:StringLiteral" value="'Clase de objeto no válida en el campo fecha'"/>
              </actualParams>
            </expression>
          </subStatements>
          <subStatements xsi:type="gastm:ExpressionStatement">
            <expression xsi:type="gastm:BinaryExpression">
              <operator xsi:type="gastm:Assign"/>
              <leftOperand xsi:type="gastm:IdentifierReference" refersTo="//@files.0/@implementation/@fragments.2/@body.0/@declarations.0">
                <name nameString="ed"/>
              </leftOperand>
              <rightOperand xsi:type="sastm:DelphiFunctionCallExpression">
                <calledFunction xsi:type="gastm:IdentifierReference" refersTo="//@files.0/@implementation/@fragments.2/@body.0/@declarations.0">
                  <name nameString="TEdit"/>
                </calledFunction>
                <actualParams xsi:type="gastm:ActualParameterExpression">
                  <value xsi:type="gastm:IdentifierReference">
                    <name nameString="ob"/>
                  </value>
                </actualParams>
              </rightOperand>
            </expression>
          </subStatements>
          <subStatements xsi:type="gastm:TryStatement">
            <guardedStatement xsi:type="gastm:IfStatement">
              <condition xsi:type="gastm:BinaryExpression">
                <leftOperand xsi:type="gastm:QualifiedOverData" refersTo="//@files.0/@implementation/@fragments.2/@body.0/@declarations.0">
                  <name nameString="ed"/>
                  <member>
                    <name nameString="Text"/>
                  </member>
                </leftOperand>
                <rightOperand xsi:type="gastm:StringLiteral" value="''"/>
              </condition>
              <thenBody xsi:type="gastm:ExpressionStatement">
                <expression xsi:type="gastm:FunctionCallExpression">
                  <calledFunction xsi:type="gastm:IdentifierReference">
                    <name nameString="StrToDate"/>
                  </calledFunction>
                  <actualParams xsi:type="gastm:ActualParameterExpression">
                    <value xsi:type="sastm:DelphiFunctionCallExpression">
                      <calledFunction xsi:type="gastm:IdentifierReference">
                        <name nameString="Trim"/>
                      </calledFunction>
                      <actualParams xsi:type="gastm:ActualParameterExpression">
                        <value xsi:type="gastm:QualifiedOverData" refersTo="//@files.0/@implementation/@fragments.2/@body.0/@declarations.0">
                          <name nameString="ed"/>
                          <member>
                            <name nameString="Text"/>
                          </member>
                        </value>
                      </actualParams>
                    </value>
                  </actualParams>
                </expression>
              </thenBody>
            </guardedStatement>
          </subStatements>
          <declarations xsi:type="gastm:VariableDefinition" isMutable="true">
            <identifierName nameString="ed"/>
          </declarations>
        </body>
      </fragments>
      <fragments xsi:type="gastm:FunctionDefinition">
        <identifierName nameString="TNumber.FloatSql"/>
        <body xsi:type="sastm:DelphiBlockStatement">
          <subStatements xsi:type="gastm:ExpressionStatement">
            <expression xsi:type="gastm:BinaryExpression">
              <operator xsi:type="gastm:Assign"/>
              <leftOperand xsi:type="gastm:IdentifierReference">
                <name nameString="Result"/>
              </leftOperand>
              <rightOperand xsi:type="sastm:DelphiFunctionCallExpression">
                <calledFunction xsi:type="gastm:IdentifierReference">
                  <name nameString="AnsiReplaceText"/>
                </calledFunction>
                <actualParams xsi:type="gastm:ActualParameterExpression">
                  <value xsi:type="gastm:IdentifierReference">
                    <name nameString="f"/>
                  </value>
                </actualParams>
                <actualParams xsi:type="gastm:ActualParameterExpression">
                  <value xsi:type="gastm:StringLiteral" value="','"/>
                </actualParams>
                <actualParams xsi:type="gastm:ActualParameterExpression">
                  <value xsi:type="gastm:StringLiteral" value="'.'"/>
                </actualParams>
              </rightOperand>
            </expression>
          </subStatements>
        </body>
      </fragments>
      <fragments xsi:type="gastm:FunctionDefinition">
        <identifierName nameString="TNumber.FloatSql"/>
        <body xsi:type="sastm:DelphiBlockStatement">
          <subStatements xsi:type="gastm:ExpressionStatement">
            <expression xsi:type="gastm:BinaryExpression">
              <operator xsi:type="gastm:Assign"/>
              <leftOperand xsi:type="gastm:IdentifierReference">
                <name nameString="Result"/>
              </leftOperand>
              <rightOperand xsi:type="sastm:DelphiFunctionCallExpression">
                <calledFunction xsi:type="gastm:IdentifierReference">
                  <name nameString="FloatSql"/>
                </calledFunction>
                <actualParams xsi:type="gastm:ActualParameterExpression">
                  <value xsi:type="sastm:DelphiFunctionCallExpression">
                    <calledFunction xsi:type="gastm:IdentifierReference">
                      <name nameString="FloatToStr"/>
                    </calledFunction>
                    <actualParams xsi:type="gastm:ActualParameterExpression">
                      <value xsi:type="gastm:IdentifierReference">
                        <name nameString="f"/>
                      </value>
                    </actualParams>
                  </value>
                </actualParams>
              </rightOperand>
            </expression>
          </subStatements>
        </body>
      </fragments>
    </implementation>
  </files>
</gastm:Project>
